
DIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000006c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000246  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  00000246  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  00000275  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  00000283  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c26  00000000  00000000  000002e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005fb  00000000  00000000  00000f09  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000376  00000000  00000000  00001504  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000088  00000000  00000000  0000187c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001dc  00000000  00000000  00001904  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000276  00000000  00000000  00001ae0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00001d56  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  000001c4  000001c4  00000238  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001d98  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.DIO_voidSetPinDirection 000000e6  0000006c  0000006c  000000e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.DIO_voidSetPortValue 00000020  0000018e  0000018e  00000202  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.main    0000003c  00000152  00000152  000001c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__dummy_fini 00000002  000001cc  000001cc  00000240  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__dummy_funcs_on_exit 00000002  000001ce  000001ce  00000242  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__dummy_simulator_exit 00000002  000001d0  000001d0  00000244  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.exit    00000016  000001ae  000001ae  00000222  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text._Exit   00000004  000001c8  000001c8  0000023c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
   8:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
   c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
  10:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
  14:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
  18:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
  1c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
  20:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
  24:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
  28:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
  2c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
  30:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
  34:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
  38:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
  3c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
  40:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
  44:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
  48:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
  4c:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>
  50:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 a9 00 	call	0x152	; 0x152 <main>
  64:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <exit>

00000068 <_exit>:
  68:	f8 94       	cli

0000006a <__stop_program>:
  6a:	ff cf       	rjmp	.-2      	; 0x6a <__stop_program>

Disassembly of section .text:

000001c4 <__bad_interrupt>:
 1c4:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.DIO_voidSetPinDirection:

0000006c <DIO_voidSetPinDirection>:
	switch(PORT_ID)
	{
		case DIO_PORTA: DDRA= Direction;break;
		case DIO_PORTB: DDRB= Direction;break;
		case DIO_PORTC: DDRC= Direction;break;
		case DIO_PORTD: DDRD= Direction;break;
  6c:	68 30       	cpi	r22, 0x08	; 8
  6e:	08 f0       	brcs	.+2      	; 0x72 <DIO_voidSetPinDirection+0x6>
  70:	6f c0       	rjmp	.+222    	; 0x150 <DIO_voidSetPinDirection+0xe4>
  72:	41 11       	cpse	r20, r1
  74:	38 c0       	rjmp	.+112    	; 0xe6 <DIO_voidSetPinDirection+0x7a>
  76:	81 30       	cpi	r24, 0x01	; 1
  78:	91 f0       	breq	.+36     	; 0x9e <DIO_voidSetPinDirection+0x32>
  7a:	28 f0       	brcs	.+10     	; 0x86 <DIO_voidSetPinDirection+0x1a>
  7c:	82 30       	cpi	r24, 0x02	; 2
  7e:	d9 f0       	breq	.+54     	; 0xb6 <DIO_voidSetPinDirection+0x4a>
  80:	83 30       	cpi	r24, 0x03	; 3
  82:	29 f1       	breq	.+74     	; 0xce <DIO_voidSetPinDirection+0x62>
  84:	08 95       	ret
  86:	2a b3       	in	r18, 0x1a	; 26
  88:	81 e0       	ldi	r24, 0x01	; 1
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	02 c0       	rjmp	.+4      	; 0x92 <DIO_voidSetPinDirection+0x26>
  8e:	88 0f       	add	r24, r24
  90:	99 1f       	adc	r25, r25
  92:	6a 95       	dec	r22
  94:	e2 f7       	brpl	.-8      	; 0x8e <DIO_voidSetPinDirection+0x22>
  96:	80 95       	com	r24
  98:	82 23       	and	r24, r18
  9a:	8a bb       	out	0x1a, r24	; 26
  9c:	08 95       	ret
  9e:	27 b3       	in	r18, 0x17	; 23
  a0:	81 e0       	ldi	r24, 0x01	; 1
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	02 c0       	rjmp	.+4      	; 0xaa <DIO_voidSetPinDirection+0x3e>
  a6:	88 0f       	add	r24, r24
  a8:	99 1f       	adc	r25, r25
  aa:	6a 95       	dec	r22
  ac:	e2 f7       	brpl	.-8      	; 0xa6 <DIO_voidSetPinDirection+0x3a>
  ae:	80 95       	com	r24
  b0:	82 23       	and	r24, r18
  b2:	87 bb       	out	0x17, r24	; 23
  b4:	08 95       	ret
  b6:	24 b3       	in	r18, 0x14	; 20
  b8:	81 e0       	ldi	r24, 0x01	; 1
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	02 c0       	rjmp	.+4      	; 0xc2 <DIO_voidSetPinDirection+0x56>
  be:	88 0f       	add	r24, r24
  c0:	99 1f       	adc	r25, r25
  c2:	6a 95       	dec	r22
  c4:	e2 f7       	brpl	.-8      	; 0xbe <DIO_voidSetPinDirection+0x52>
  c6:	80 95       	com	r24
  c8:	82 23       	and	r24, r18
  ca:	84 bb       	out	0x14, r24	; 20
  cc:	08 95       	ret
  ce:	21 b3       	in	r18, 0x11	; 17
  d0:	81 e0       	ldi	r24, 0x01	; 1
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	02 c0       	rjmp	.+4      	; 0xda <DIO_voidSetPinDirection+0x6e>
  d6:	88 0f       	add	r24, r24
  d8:	99 1f       	adc	r25, r25
  da:	6a 95       	dec	r22
  dc:	e2 f7       	brpl	.-8      	; 0xd6 <DIO_voidSetPinDirection+0x6a>
  de:	80 95       	com	r24
  e0:	82 23       	and	r24, r18
  e2:	81 bb       	out	0x11, r24	; 17
  e4:	08 95       	ret
  e6:	41 30       	cpi	r20, 0x01	; 1
  e8:	99 f5       	brne	.+102    	; 0x150 <DIO_voidSetPinDirection+0xe4>
  ea:	81 30       	cpi	r24, 0x01	; 1
  ec:	89 f0       	breq	.+34     	; 0x110 <DIO_voidSetPinDirection+0xa4>
  ee:	28 f0       	brcs	.+10     	; 0xfa <DIO_voidSetPinDirection+0x8e>
  f0:	82 30       	cpi	r24, 0x02	; 2
  f2:	c9 f0       	breq	.+50     	; 0x126 <DIO_voidSetPinDirection+0xba>
  f4:	83 30       	cpi	r24, 0x03	; 3
  f6:	11 f1       	breq	.+68     	; 0x13c <DIO_voidSetPinDirection+0xd0>
  f8:	08 95       	ret
  fa:	2a b3       	in	r18, 0x1a	; 26
  fc:	81 e0       	ldi	r24, 0x01	; 1
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	02 c0       	rjmp	.+4      	; 0x106 <DIO_voidSetPinDirection+0x9a>
 102:	88 0f       	add	r24, r24
 104:	99 1f       	adc	r25, r25
 106:	6a 95       	dec	r22
 108:	e2 f7       	brpl	.-8      	; 0x102 <DIO_voidSetPinDirection+0x96>
 10a:	82 2b       	or	r24, r18
 10c:	8a bb       	out	0x1a, r24	; 26
 10e:	08 95       	ret
 110:	27 b3       	in	r18, 0x17	; 23
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	02 c0       	rjmp	.+4      	; 0x11c <DIO_voidSetPinDirection+0xb0>
 118:	88 0f       	add	r24, r24
 11a:	99 1f       	adc	r25, r25
 11c:	6a 95       	dec	r22
 11e:	e2 f7       	brpl	.-8      	; 0x118 <DIO_voidSetPinDirection+0xac>
 120:	82 2b       	or	r24, r18
 122:	87 bb       	out	0x17, r24	; 23
 124:	08 95       	ret
 126:	24 b3       	in	r18, 0x14	; 20
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	02 c0       	rjmp	.+4      	; 0x132 <DIO_voidSetPinDirection+0xc6>
 12e:	88 0f       	add	r24, r24
 130:	99 1f       	adc	r25, r25
 132:	6a 95       	dec	r22
 134:	e2 f7       	brpl	.-8      	; 0x12e <DIO_voidSetPinDirection+0xc2>
 136:	82 2b       	or	r24, r18
 138:	84 bb       	out	0x14, r24	; 20
 13a:	08 95       	ret
 13c:	21 b3       	in	r18, 0x11	; 17
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	02 c0       	rjmp	.+4      	; 0x148 <DIO_voidSetPinDirection+0xdc>
 144:	88 0f       	add	r24, r24
 146:	99 1f       	adc	r25, r25
 148:	6a 95       	dec	r22
 14a:	e2 f7       	brpl	.-8      	; 0x144 <DIO_voidSetPinDirection+0xd8>
 14c:	82 2b       	or	r24, r18
 14e:	81 bb       	out	0x11, r24	; 17
 150:	08 95       	ret

Disassembly of section .text.DIO_voidSetPortValue:

0000018e <DIO_voidSetPortValue>:
	}
}
void DIO_voidSetPortValue(u8 PORT_ID,u8 Value)
{
	switch(PORT_ID)
 18e:	81 30       	cpi	r24, 0x01	; 1
 190:	41 f0       	breq	.+16     	; 0x1a2 <DIO_voidSetPortValue+0x14>
 192:	28 f0       	brcs	.+10     	; 0x19e <DIO_voidSetPortValue+0x10>
 194:	82 30       	cpi	r24, 0x02	; 2
 196:	39 f0       	breq	.+14     	; 0x1a6 <DIO_voidSetPortValue+0x18>
 198:	83 30       	cpi	r24, 0x03	; 3
 19a:	39 f0       	breq	.+14     	; 0x1aa <DIO_voidSetPortValue+0x1c>
 19c:	08 95       	ret
	{
		case DIO_PORTA: PORTA= Value;break;
 19e:	6b bb       	out	0x1b, r22	; 27
 1a0:	08 95       	ret
		case DIO_PORTB: PORTB= Value;break;
 1a2:	68 bb       	out	0x18, r22	; 24
 1a4:	08 95       	ret
		case DIO_PORTC: PORTC= Value;break;
 1a6:	65 bb       	out	0x15, r22	; 21
 1a8:	08 95       	ret
		case DIO_PORTD: PORTD= Value;break;
 1aa:	62 bb       	out	0x12, r22	; 18
 1ac:	08 95       	ret

Disassembly of section .text.main:

00000152 <main>:
		_delay_ms(1000);
		DIO_voidSetPinValue(DIO_PORTA,PIN6,PIN_LOW);
		
        //TODO:: Please write your application code 
    }*/
	DIO_voidSetPinDirection(DIO_PORTB,PIN6,PORT_OUTPUT);
 152:	41 e0       	ldi	r20, 0x01	; 1
 154:	66 e0       	ldi	r22, 0x06	; 6
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	0e 94 36 00 	call	0x6c	; 0x6c <__data_load_end>
	DIO_voidSetPinDirection(DIO_PORTB, PIN0,PORT_OUTPUT);
 15c:	41 e0       	ldi	r20, 0x01	; 1
 15e:	60 e0       	ldi	r22, 0x00	; 0
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	0e 94 36 00 	call	0x6c	; 0x6c <__data_load_end>
	DIO_voidSetPinDirection(DIO_PORTB, PIN1,PORT_OUTPUT);
 166:	41 e0       	ldi	r20, 0x01	; 1
 168:	61 e0       	ldi	r22, 0x01	; 1
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	0e 94 36 00 	call	0x6c	; 0x6c <__data_load_end>
	DIO_voidSetPinDirection(DIO_PORTB, PIN2,PORT_OUTPUT);
 170:	41 e0       	ldi	r20, 0x01	; 1
 172:	62 e0       	ldi	r22, 0x02	; 2
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	0e 94 36 00 	call	0x6c	; 0x6c <__data_load_end>
	DIO_voidSetPinDirection(DIO_PORTB, PIN4,PORT_OUTPUT);
 17a:	41 e0       	ldi	r20, 0x01	; 1
 17c:	64 e0       	ldi	r22, 0x04	; 4
 17e:	81 e0       	ldi	r24, 0x01	; 1
 180:	0e 94 36 00 	call	0x6c	; 0x6c <__data_load_end>
	u8 ssd[9] = {0b00000000,0b00000001,0b00000010,0b00000100,0b00000101,0b00000110,0b00000111,0b00001000,0b00001001}; // array for the numbers 0 to 9
	u8 number =2 ;
	while(1)
	{
		DIO_voidSetPortValue(DIO_PORTB,ssd[number]);
 184:	62 e0       	ldi	r22, 0x02	; 2
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	0e 94 c7 00 	call	0x18e	; 0x18e <DIO_voidSetPortValue>
 18c:	fb cf       	rjmp	.-10     	; 0x184 <main+0x32>

Disassembly of section .text.__dummy_fini:

000001cc <_fini>:
 1cc:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000001ce <__funcs_on_exit>:
 1ce:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000001d0 <__simulator_exit>:
 1d0:	08 95       	ret

Disassembly of section .text.exit:

000001ae <exit>:
 1ae:	ec 01       	movw	r28, r24
 1b0:	0e 94 e7 00 	call	0x1ce	; 0x1ce <__funcs_on_exit>
 1b4:	0e 94 e6 00 	call	0x1cc	; 0x1cc <_fini>
 1b8:	ce 01       	movw	r24, r28
 1ba:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <__simulator_exit>
 1be:	ce 01       	movw	r24, r28
 1c0:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <_Exit>

Disassembly of section .text._Exit:

000001c8 <_Exit>:
 1c8:	0e 94 34 00 	call	0x68	; 0x68 <_exit>
