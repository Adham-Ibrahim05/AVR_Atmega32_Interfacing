
Servo Motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ae  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000b0c  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  00000b0c  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 00000062  00000000  00000000  00000b3b  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000158  00000000  00000000  00000b9d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002eeb  00000000  00000000  00000cf5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009bd  00000000  00000000  00003be0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000d60  00000000  00000000  0000459d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000032c  00000000  00000000  00005300  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000286  00000000  00000000  0000562c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001324  00000000  00000000  000058b2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000108  00000000  00000000  00006bd6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000a6a  00000a6a  00000afe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00006ce0  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.ADC_voidInit 00000038  00000934  00000934  000009c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.ADC_Channel 0000000c  00000a42  00000a42  00000ad6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.ADC_voidEnable 00000008  00000a4e  00000a4e  00000ae2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.ADC_voidStartConversion 00000008  00000a56  00000a56  00000aea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.ADC_u16GetChannelReading 00000016  000009f0  000009f0  00000a84  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.DIO_VoidInit 00000018  000009d8  000009d8  00000a6c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.DIO_voidSetPinValue 000000e6  00000498  00000498  0000052c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.LCD_voidInit 000002ee  000000ae  000000ae  00000142  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.LCD_voidSendData 000000da  0000057e  0000057e  00000612  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.LCD_voidGoToXY 000000fc  0000039c  0000039c  00000430  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.LCD_voidWriteNumber 000000ae  00000658  00000658  000006ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.Map     0000009a  00000706  00000706  0000079a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.main    0000008e  000007a0  000007a0  00000834  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.Timer1_voidInit 00000074  0000082e  0000082e  000008c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.Timer1_voidSetOCRValue 00000006  00000a5e  00000a5e  00000af2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.Timer1_voidSetICRValue 00000006  00000a64  00000a64  00000af8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.__vector_6 0000004e  000008a2  000008a2  00000936  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .bss.INT      00000002  00800060  00800060  00000b0c  2**0
                  ALLOC
 32 .text.libgcc.mul 00000020  0000099a  0000099a  00000a2e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.libgcc.div 0000002e  0000096c  0000096c  00000a00  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.libgcc.div 00000010  00000a32  00000a32  00000ac6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.libgcc.mul 0000001e  000009ba  000009ba  00000a4e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.libgcc.mul 00000016  00000a06  00000a06  00000a9a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.libgcc.div 00000044  000008f0  000008f0  00000984  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.__dummy_fini 00000002  00000a72  00000a72  00000b06  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.__dummy_funcs_on_exit 00000002  00000a74  00000a74  00000b08  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.__dummy_simulator_exit 00000002  00000a76  00000a76  00000b0a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.exit    00000016  00000a1c  00000a1c  00000ab0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text._Exit   00000004  00000a6e  00000a6e  00000b02  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2d 00 	jmp	0x5a	; 0x5a <__ctors_end>
   4:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__bad_interrupt>
   8:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__bad_interrupt>
   c:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__bad_interrupt>
  10:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__bad_interrupt>
  14:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__bad_interrupt>
  18:	0c 94 51 04 	jmp	0x8a2	; 0x8a2 <__vector_6>
  1c:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__bad_interrupt>
  20:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__bad_interrupt>
  24:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__bad_interrupt>
  28:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__bad_interrupt>
  2c:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__bad_interrupt>
  30:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__bad_interrupt>
  34:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__bad_interrupt>
  38:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__bad_interrupt>
  3c:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__bad_interrupt>
  40:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__bad_interrupt>
  44:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__bad_interrupt>
  48:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__bad_interrupt>
  4c:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__bad_interrupt>
  50:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__bad_interrupt>

00000054 <.dinit>:
  54:	00 60       	ori	r16, 0x00	; 0
  56:	00 62       	ori	r16, 0x20	; 32
  58:	80 00       	.word	0x0080	; ????

0000005a <__ctors_end>:
  5a:	11 24       	eor	r1, r1
  5c:	1f be       	out	0x3f, r1	; 63
  5e:	cf e5       	ldi	r28, 0x5F	; 95
  60:	d8 e0       	ldi	r29, 0x08	; 8
  62:	de bf       	out	0x3e, r29	; 62
  64:	cd bf       	out	0x3d, r28	; 61

00000066 <__do_copy_data>:
  66:	e4 e5       	ldi	r30, 0x54	; 84
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	40 e0       	ldi	r20, 0x00	; 0
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__do_clear_bss+0x8>
  6e:	b5 91       	lpm	r27, Z+
  70:	a5 91       	lpm	r26, Z+
  72:	35 91       	lpm	r19, Z+
  74:	25 91       	lpm	r18, Z+
  76:	05 91       	lpm	r16, Z+
  78:	07 fd       	sbrc	r16, 7
  7a:	0c c0       	rjmp	.+24     	; 0x94 <__do_clear_bss>
  7c:	95 91       	lpm	r25, Z+
  7e:	85 91       	lpm	r24, Z+
  80:	ef 01       	movw	r28, r30
  82:	f9 2f       	mov	r31, r25
  84:	e8 2f       	mov	r30, r24
  86:	05 90       	lpm	r0, Z+
  88:	0d 92       	st	X+, r0
  8a:	a2 17       	cp	r26, r18
  8c:	b3 07       	cpc	r27, r19
  8e:	d9 f7       	brne	.-10     	; 0x86 <__do_copy_data+0x20>
  90:	fe 01       	movw	r30, r28
  92:	04 c0       	rjmp	.+8      	; 0x9c <__do_clear_bss+0x8>

00000094 <__do_clear_bss>:
  94:	1d 92       	st	X+, r1
  96:	a2 17       	cp	r26, r18
  98:	b3 07       	cpc	r27, r19
  9a:	e1 f7       	brne	.-8      	; 0x94 <__do_clear_bss>
  9c:	e9 35       	cpi	r30, 0x59	; 89
  9e:	f4 07       	cpc	r31, r20
  a0:	31 f7       	brne	.-52     	; 0x6e <__do_copy_data+0x8>
  a2:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <main>
  a6:	0c 94 0e 05 	jmp	0xa1c	; 0xa1c <exit>

000000aa <_exit>:
  aa:	f8 94       	cli

000000ac <__stop_program>:
  ac:	ff cf       	rjmp	.-2      	; 0xac <__stop_program>

Disassembly of section .text:

00000a6a <__bad_interrupt>:
 a6a:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.ADC_voidInit:

00000934 <ADC_voidInit>:
	CLR_BIT(ADCSRA,ADCSRA_ADEN);
}

void ADC_voidInterrputEnable()
{
	SET_BIT(ADCSRA,ADCSRA_ADIE);
 934:	87 b1       	in	r24, 0x07	; 7
 936:	80 64       	ori	r24, 0x40	; 64
 938:	87 b9       	out	0x07, r24	; 7
 93a:	87 b1       	in	r24, 0x07	; 7
 93c:	8f 77       	andi	r24, 0x7F	; 127
 93e:	87 b9       	out	0x07, r24	; 7
 940:	87 b1       	in	r24, 0x07	; 7
 942:	8f 7d       	andi	r24, 0xDF	; 223
 944:	87 b9       	out	0x07, r24	; 7
 946:	87 b1       	in	r24, 0x07	; 7
 948:	88 7f       	andi	r24, 0xF8	; 248
 94a:	87 b9       	out	0x07, r24	; 7
 94c:	87 b1       	in	r24, 0x07	; 7
 94e:	83 60       	ori	r24, 0x03	; 3
 950:	87 b9       	out	0x07, r24	; 7
 952:	86 b1       	in	r24, 0x06	; 6
 954:	8f 77       	andi	r24, 0x7F	; 127
 956:	86 b9       	out	0x06, r24	; 6
 958:	86 b1       	in	r24, 0x06	; 6
 95a:	8f 7d       	andi	r24, 0xDF	; 223
 95c:	86 b9       	out	0x06, r24	; 6
 95e:	86 b1       	in	r24, 0x06	; 6
 960:	80 61       	ori	r24, 0x10	; 16
 962:	86 b9       	out	0x06, r24	; 6
 964:	86 b1       	in	r24, 0x06	; 6
 966:	87 7f       	andi	r24, 0xF7	; 247
 968:	86 b9       	out	0x06, r24	; 6
 96a:	08 95       	ret

Disassembly of section .text.ADC_Channel:

00000a42 <ADC_Channel>:
 a42:	87 b1       	in	r24, 0x07	; 7
 a44:	80 7e       	andi	r24, 0xE0	; 224
 a46:	87 b9       	out	0x07, r24	; 7
 a48:	87 b1       	in	r24, 0x07	; 7
 a4a:	87 b9       	out	0x07, r24	; 7
 a4c:	08 95       	ret

Disassembly of section .text.ADC_voidEnable:

00000a4e <ADC_voidEnable>:
 a4e:	86 b1       	in	r24, 0x06	; 6
 a50:	80 68       	ori	r24, 0x80	; 128
 a52:	86 b9       	out	0x06, r24	; 6
 a54:	08 95       	ret

Disassembly of section .text.ADC_voidStartConversion:

00000a56 <ADC_voidStartConversion>:
	return value;
}

void ADC_voidStartConversion()
{
	SET_BIT(ADCSRA,ADCSRA_ADSC);
 a56:	86 b1       	in	r24, 0x06	; 6
 a58:	80 64       	ori	r24, 0x40	; 64
 a5a:	86 b9       	out	0x06, r24	; 6
 a5c:	08 95       	ret

Disassembly of section .text.ADC_u16GetChannelReading:

000009f0 <ADC_u16GetChannelReading>:
	CLR_BIT(ADCSRA,ADCSRA_ADEN);
}

void ADC_voidInterrputEnable()
{
	SET_BIT(ADCSRA,ADCSRA_ADIE);
 9f0:	0e 94 2b 05 	call	0xa56	; 0xa56 <ADC_voidStartConversion>
 9f4:	34 9b       	sbis	0x06, 4	; 6
 9f6:	fe cf       	rjmp	.-4      	; 0x9f4 <ADC_u16GetChannelReading+0x4>
 9f8:	24 b1       	in	r18, 0x04	; 4
 9fa:	35 b1       	in	r19, 0x05	; 5
 9fc:	96 b1       	in	r25, 0x06	; 6
 9fe:	90 61       	ori	r25, 0x10	; 16
 a00:	96 b9       	out	0x06, r25	; 6
 a02:	c9 01       	movw	r24, r18
 a04:	08 95       	ret

Disassembly of section .text.DIO_VoidInit:

000009d8 <DIO_VoidInit>:
#include "DIO_register.h"
#include "DIO_private.h"

void DIO_VoidInit(void)
{
	DDRA = PORTA_DIR;
 9d8:	8e e0       	ldi	r24, 0x0E	; 14
 9da:	8a bb       	out	0x1a, r24	; 26
	DDRB = PORTB_DIR;
 9dc:	8f e1       	ldi	r24, 0x1F	; 31
 9de:	87 bb       	out	0x17, r24	; 23
	DDRC = PORTC_DIR;
 9e0:	14 ba       	out	0x14, r1	; 20
	DDRD = PORTD_DIR;
 9e2:	80 e2       	ldi	r24, 0x20	; 32
 9e4:	81 bb       	out	0x11, r24	; 17
	
	PORTA = PORTA_INITIAL_VALUE;
 9e6:	1b ba       	out	0x1b, r1	; 27
	PORTB = PORTB_INITIAL_VALUE;
 9e8:	18 ba       	out	0x18, r1	; 24
	PORTC = PORTC_INITIAL_VALUE;
 9ea:	15 ba       	out	0x15, r1	; 21
	PORTD = PORTD_INITIAL_VALUE;
 9ec:	12 ba       	out	0x12, r1	; 18
 9ee:	08 95       	ret

Disassembly of section .text.DIO_voidSetPinValue:

00000498 <DIO_voidSetPinValue>:
}


void DIO_voidSetPinValue(u8 PORT_ID,u8 PIN_ID,u8 Value)
{
	if(PIN_ID <= DIO_PIN7)
 498:	68 30       	cpi	r22, 0x08	; 8
 49a:	08 f0       	brcs	.+2      	; 0x49e <DIO_voidSetPinValue+0x6>
 49c:	6f c0       	rjmp	.+222    	; 0x57c <DIO_voidSetPinValue+0xe4>
	{
		if(Value == PIN_LOW)
 49e:	41 11       	cpse	r20, r1
 4a0:	38 c0       	rjmp	.+112    	; 0x512 <DIO_voidSetPinValue+0x7a>
		{
			switch(PORT_ID)
 4a2:	81 30       	cpi	r24, 0x01	; 1
 4a4:	91 f0       	breq	.+36     	; 0x4ca <DIO_voidSetPinValue+0x32>
 4a6:	28 f0       	brcs	.+10     	; 0x4b2 <DIO_voidSetPinValue+0x1a>
 4a8:	82 30       	cpi	r24, 0x02	; 2
 4aa:	d9 f0       	breq	.+54     	; 0x4e2 <DIO_voidSetPinValue+0x4a>
 4ac:	83 30       	cpi	r24, 0x03	; 3
 4ae:	29 f1       	breq	.+74     	; 0x4fa <DIO_voidSetPinValue+0x62>
 4b0:	08 95       	ret
			{
				case DIO_PORTA: CLR_BIT(PORTA,PIN_ID);break;
 4b2:	2b b3       	in	r18, 0x1b	; 27
 4b4:	81 e0       	ldi	r24, 0x01	; 1
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	02 c0       	rjmp	.+4      	; 0x4be <DIO_voidSetPinValue+0x26>
 4ba:	88 0f       	add	r24, r24
 4bc:	99 1f       	adc	r25, r25
 4be:	6a 95       	dec	r22
 4c0:	e2 f7       	brpl	.-8      	; 0x4ba <DIO_voidSetPinValue+0x22>
 4c2:	80 95       	com	r24
 4c4:	82 23       	and	r24, r18
 4c6:	8b bb       	out	0x1b, r24	; 27
 4c8:	08 95       	ret
				case DIO_PORTB: CLR_BIT(PORTB,PIN_ID);break;
 4ca:	28 b3       	in	r18, 0x18	; 24
 4cc:	81 e0       	ldi	r24, 0x01	; 1
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	02 c0       	rjmp	.+4      	; 0x4d6 <DIO_voidSetPinValue+0x3e>
 4d2:	88 0f       	add	r24, r24
 4d4:	99 1f       	adc	r25, r25
 4d6:	6a 95       	dec	r22
 4d8:	e2 f7       	brpl	.-8      	; 0x4d2 <DIO_voidSetPinValue+0x3a>
 4da:	80 95       	com	r24
 4dc:	82 23       	and	r24, r18
 4de:	88 bb       	out	0x18, r24	; 24
 4e0:	08 95       	ret
				case DIO_PORTC: CLR_BIT(PORTC,PIN_ID);break;
 4e2:	25 b3       	in	r18, 0x15	; 21
 4e4:	81 e0       	ldi	r24, 0x01	; 1
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	02 c0       	rjmp	.+4      	; 0x4ee <DIO_voidSetPinValue+0x56>
 4ea:	88 0f       	add	r24, r24
 4ec:	99 1f       	adc	r25, r25
 4ee:	6a 95       	dec	r22
 4f0:	e2 f7       	brpl	.-8      	; 0x4ea <DIO_voidSetPinValue+0x52>
 4f2:	80 95       	com	r24
 4f4:	82 23       	and	r24, r18
 4f6:	85 bb       	out	0x15, r24	; 21
 4f8:	08 95       	ret
				case DIO_PORTD: CLR_BIT(PORTD,PIN_ID);break;
 4fa:	22 b3       	in	r18, 0x12	; 18
 4fc:	81 e0       	ldi	r24, 0x01	; 1
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	02 c0       	rjmp	.+4      	; 0x506 <DIO_voidSetPinValue+0x6e>
 502:	88 0f       	add	r24, r24
 504:	99 1f       	adc	r25, r25
 506:	6a 95       	dec	r22
 508:	e2 f7       	brpl	.-8      	; 0x502 <DIO_voidSetPinValue+0x6a>
 50a:	80 95       	com	r24
 50c:	82 23       	and	r24, r18
 50e:	82 bb       	out	0x12, r24	; 18
 510:	08 95       	ret
			}
		}
		else if(Value == PIN_HIGH)
 512:	41 30       	cpi	r20, 0x01	; 1
 514:	99 f5       	brne	.+102    	; 0x57c <DIO_voidSetPinValue+0xe4>
		{
			switch(PORT_ID)
 516:	81 30       	cpi	r24, 0x01	; 1
 518:	89 f0       	breq	.+34     	; 0x53c <DIO_voidSetPinValue+0xa4>
 51a:	28 f0       	brcs	.+10     	; 0x526 <DIO_voidSetPinValue+0x8e>
 51c:	82 30       	cpi	r24, 0x02	; 2
 51e:	c9 f0       	breq	.+50     	; 0x552 <DIO_voidSetPinValue+0xba>
 520:	83 30       	cpi	r24, 0x03	; 3
 522:	11 f1       	breq	.+68     	; 0x568 <DIO_voidSetPinValue+0xd0>
 524:	08 95       	ret
			{
				case DIO_PORTA: SET_BIT(PORTA,PIN_ID);break;
 526:	2b b3       	in	r18, 0x1b	; 27
 528:	81 e0       	ldi	r24, 0x01	; 1
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	02 c0       	rjmp	.+4      	; 0x532 <DIO_voidSetPinValue+0x9a>
 52e:	88 0f       	add	r24, r24
 530:	99 1f       	adc	r25, r25
 532:	6a 95       	dec	r22
 534:	e2 f7       	brpl	.-8      	; 0x52e <DIO_voidSetPinValue+0x96>
 536:	82 2b       	or	r24, r18
 538:	8b bb       	out	0x1b, r24	; 27
 53a:	08 95       	ret
				case DIO_PORTB: SET_BIT(PORTB,PIN_ID);break;
 53c:	28 b3       	in	r18, 0x18	; 24
 53e:	81 e0       	ldi	r24, 0x01	; 1
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	02 c0       	rjmp	.+4      	; 0x548 <DIO_voidSetPinValue+0xb0>
 544:	88 0f       	add	r24, r24
 546:	99 1f       	adc	r25, r25
 548:	6a 95       	dec	r22
 54a:	e2 f7       	brpl	.-8      	; 0x544 <DIO_voidSetPinValue+0xac>
 54c:	82 2b       	or	r24, r18
 54e:	88 bb       	out	0x18, r24	; 24
 550:	08 95       	ret
				case DIO_PORTC: SET_BIT(PORTC,PIN_ID);break;
 552:	25 b3       	in	r18, 0x15	; 21
 554:	81 e0       	ldi	r24, 0x01	; 1
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	02 c0       	rjmp	.+4      	; 0x55e <DIO_voidSetPinValue+0xc6>
 55a:	88 0f       	add	r24, r24
 55c:	99 1f       	adc	r25, r25
 55e:	6a 95       	dec	r22
 560:	e2 f7       	brpl	.-8      	; 0x55a <DIO_voidSetPinValue+0xc2>
 562:	82 2b       	or	r24, r18
 564:	85 bb       	out	0x15, r24	; 21
 566:	08 95       	ret
				case DIO_PORTD: SET_BIT(PORTD,PIN_ID);break;
 568:	22 b3       	in	r18, 0x12	; 18
 56a:	81 e0       	ldi	r24, 0x01	; 1
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	02 c0       	rjmp	.+4      	; 0x574 <DIO_voidSetPinValue+0xdc>
 570:	88 0f       	add	r24, r24
 572:	99 1f       	adc	r25, r25
 574:	6a 95       	dec	r22
 576:	e2 f7       	brpl	.-8      	; 0x570 <DIO_voidSetPinValue+0xd8>
 578:	82 2b       	or	r24, r18
 57a:	82 bb       	out	0x12, r24	; 18
 57c:	08 95       	ret

Disassembly of section .text.LCD_voidInit:

000000ae <LCD_voidInit>:
	while(String[Counter]!='\0')
	{
		LCD_voidSendData(String[Counter]);
		Counter++;
	}
}
  ae:	85 e4       	ldi	r24, 0x45	; 69
  b0:	9e e1       	ldi	r25, 0x1E	; 30
  b2:	01 97       	sbiw	r24, 0x01	; 1
  b4:	f1 f7       	brne	.-4      	; 0xb2 <LCD_voidInit+0x4>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <LCD_voidInit+0xa>
  b8:	00 00       	nop
  ba:	40 e0       	ldi	r20, 0x00	; 0
  bc:	60 e0       	ldi	r22, 0x00	; 0
  be:	81 e0       	ldi	r24, 0x01	; 1
  c0:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
  c4:	41 e0       	ldi	r20, 0x01	; 1
  c6:	61 e0       	ldi	r22, 0x01	; 1
  c8:	81 e0       	ldi	r24, 0x01	; 1
  ca:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
  ce:	40 e0       	ldi	r20, 0x00	; 0
  d0:	62 e0       	ldi	r22, 0x02	; 2
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
  d8:	40 e0       	ldi	r20, 0x00	; 0
  da:	64 e0       	ldi	r22, 0x04	; 4
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
  e2:	41 e0       	ldi	r20, 0x01	; 1
  e4:	62 e0       	ldi	r22, 0x02	; 2
  e6:	80 e0       	ldi	r24, 0x00	; 0
  e8:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
  ec:	83 ef       	ldi	r24, 0xF3	; 243
  ee:	91 e0       	ldi	r25, 0x01	; 1
  f0:	01 97       	sbiw	r24, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <LCD_voidInit+0x42>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <LCD_voidInit+0x48>
  f6:	00 00       	nop
  f8:	40 e0       	ldi	r20, 0x00	; 0
  fa:	62 e0       	ldi	r22, 0x02	; 2
  fc:	80 e0       	ldi	r24, 0x00	; 0
  fe:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 102:	83 ef       	ldi	r24, 0xF3	; 243
 104:	91 e0       	ldi	r25, 0x01	; 1
 106:	01 97       	sbiw	r24, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <LCD_voidInit+0x58>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <LCD_voidInit+0x5e>
 10c:	00 00       	nop
 10e:	40 e0       	ldi	r20, 0x00	; 0
 110:	60 e0       	ldi	r22, 0x00	; 0
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 118:	41 e0       	ldi	r20, 0x01	; 1
 11a:	61 e0       	ldi	r22, 0x01	; 1
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 122:	40 e0       	ldi	r20, 0x00	; 0
 124:	62 e0       	ldi	r22, 0x02	; 2
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 12c:	40 e0       	ldi	r20, 0x00	; 0
 12e:	64 e0       	ldi	r22, 0x04	; 4
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 136:	41 e0       	ldi	r20, 0x01	; 1
 138:	62 e0       	ldi	r22, 0x02	; 2
 13a:	80 e0       	ldi	r24, 0x00	; 0
 13c:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 140:	83 ef       	ldi	r24, 0xF3	; 243
 142:	91 e0       	ldi	r25, 0x01	; 1
 144:	01 97       	sbiw	r24, 0x01	; 1
 146:	f1 f7       	brne	.-4      	; 0x144 <LCD_voidInit+0x96>
 148:	00 c0       	rjmp	.+0      	; 0x14a <LCD_voidInit+0x9c>
 14a:	00 00       	nop
 14c:	40 e0       	ldi	r20, 0x00	; 0
 14e:	62 e0       	ldi	r22, 0x02	; 2
 150:	80 e0       	ldi	r24, 0x00	; 0
 152:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 156:	83 ef       	ldi	r24, 0xF3	; 243
 158:	91 e0       	ldi	r25, 0x01	; 1
 15a:	01 97       	sbiw	r24, 0x01	; 1
 15c:	f1 f7       	brne	.-4      	; 0x15a <LCD_voidInit+0xac>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <LCD_voidInit+0xb2>
 160:	00 00       	nop
 162:	40 e0       	ldi	r20, 0x00	; 0
 164:	62 e0       	ldi	r22, 0x02	; 2
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 16c:	41 e0       	ldi	r20, 0x01	; 1
 16e:	64 e0       	ldi	r22, 0x04	; 4
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 176:	41 e0       	ldi	r20, 0x01	; 1
 178:	62 e0       	ldi	r22, 0x02	; 2
 17a:	80 e0       	ldi	r24, 0x00	; 0
 17c:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 180:	83 ef       	ldi	r24, 0xF3	; 243
 182:	91 e0       	ldi	r25, 0x01	; 1
 184:	01 97       	sbiw	r24, 0x01	; 1
 186:	f1 f7       	brne	.-4      	; 0x184 <LCD_voidInit+0xd6>
 188:	00 c0       	rjmp	.+0      	; 0x18a <LCD_voidInit+0xdc>
 18a:	00 00       	nop
 18c:	40 e0       	ldi	r20, 0x00	; 0
 18e:	62 e0       	ldi	r22, 0x02	; 2
 190:	80 e0       	ldi	r24, 0x00	; 0
 192:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 196:	83 ef       	ldi	r24, 0xF3	; 243
 198:	91 e0       	ldi	r25, 0x01	; 1
 19a:	01 97       	sbiw	r24, 0x01	; 1
 19c:	f1 f7       	brne	.-4      	; 0x19a <LCD_voidInit+0xec>
 19e:	00 c0       	rjmp	.+0      	; 0x1a0 <LCD_voidInit+0xf2>
 1a0:	00 00       	nop
 1a2:	40 e0       	ldi	r20, 0x00	; 0
 1a4:	60 e0       	ldi	r22, 0x00	; 0
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 1ac:	40 e0       	ldi	r20, 0x00	; 0
 1ae:	61 e0       	ldi	r22, 0x01	; 1
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 1b6:	40 e0       	ldi	r20, 0x00	; 0
 1b8:	62 e0       	ldi	r22, 0x02	; 2
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 1c0:	40 e0       	ldi	r20, 0x00	; 0
 1c2:	64 e0       	ldi	r22, 0x04	; 4
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 1ca:	41 e0       	ldi	r20, 0x01	; 1
 1cc:	62 e0       	ldi	r22, 0x02	; 2
 1ce:	80 e0       	ldi	r24, 0x00	; 0
 1d0:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 1d4:	83 ef       	ldi	r24, 0xF3	; 243
 1d6:	91 e0       	ldi	r25, 0x01	; 1
 1d8:	01 97       	sbiw	r24, 0x01	; 1
 1da:	f1 f7       	brne	.-4      	; 0x1d8 <LCD_voidInit+0x12a>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <LCD_voidInit+0x130>
 1de:	00 00       	nop
 1e0:	40 e0       	ldi	r20, 0x00	; 0
 1e2:	62 e0       	ldi	r22, 0x02	; 2
 1e4:	80 e0       	ldi	r24, 0x00	; 0
 1e6:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 1ea:	83 ef       	ldi	r24, 0xF3	; 243
 1ec:	91 e0       	ldi	r25, 0x01	; 1
 1ee:	01 97       	sbiw	r24, 0x01	; 1
 1f0:	f1 f7       	brne	.-4      	; 0x1ee <LCD_voidInit+0x140>
 1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <LCD_voidInit+0x146>
 1f4:	00 00       	nop
 1f6:	40 e0       	ldi	r20, 0x00	; 0
 1f8:	60 e0       	ldi	r22, 0x00	; 0
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 200:	40 e0       	ldi	r20, 0x00	; 0
 202:	61 e0       	ldi	r22, 0x01	; 1
 204:	81 e0       	ldi	r24, 0x01	; 1
 206:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 20a:	41 e0       	ldi	r20, 0x01	; 1
 20c:	62 e0       	ldi	r22, 0x02	; 2
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 214:	41 e0       	ldi	r20, 0x01	; 1
 216:	64 e0       	ldi	r22, 0x04	; 4
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 21e:	41 e0       	ldi	r20, 0x01	; 1
 220:	62 e0       	ldi	r22, 0x02	; 2
 222:	80 e0       	ldi	r24, 0x00	; 0
 224:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 228:	83 ef       	ldi	r24, 0xF3	; 243
 22a:	91 e0       	ldi	r25, 0x01	; 1
 22c:	01 97       	sbiw	r24, 0x01	; 1
 22e:	f1 f7       	brne	.-4      	; 0x22c <LCD_voidInit+0x17e>
 230:	00 c0       	rjmp	.+0      	; 0x232 <LCD_voidInit+0x184>
 232:	00 00       	nop
 234:	40 e0       	ldi	r20, 0x00	; 0
 236:	62 e0       	ldi	r22, 0x02	; 2
 238:	80 e0       	ldi	r24, 0x00	; 0
 23a:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 23e:	83 ef       	ldi	r24, 0xF3	; 243
 240:	91 e0       	ldi	r25, 0x01	; 1
 242:	01 97       	sbiw	r24, 0x01	; 1
 244:	f1 f7       	brne	.-4      	; 0x242 <LCD_voidInit+0x194>
 246:	00 c0       	rjmp	.+0      	; 0x248 <LCD_voidInit+0x19a>
 248:	00 00       	nop
 24a:	40 e0       	ldi	r20, 0x00	; 0
 24c:	60 e0       	ldi	r22, 0x00	; 0
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 254:	40 e0       	ldi	r20, 0x00	; 0
 256:	61 e0       	ldi	r22, 0x01	; 1
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 25e:	40 e0       	ldi	r20, 0x00	; 0
 260:	62 e0       	ldi	r22, 0x02	; 2
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 268:	40 e0       	ldi	r20, 0x00	; 0
 26a:	64 e0       	ldi	r22, 0x04	; 4
 26c:	81 e0       	ldi	r24, 0x01	; 1
 26e:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 272:	41 e0       	ldi	r20, 0x01	; 1
 274:	62 e0       	ldi	r22, 0x02	; 2
 276:	80 e0       	ldi	r24, 0x00	; 0
 278:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 27c:	83 ef       	ldi	r24, 0xF3	; 243
 27e:	91 e0       	ldi	r25, 0x01	; 1
 280:	01 97       	sbiw	r24, 0x01	; 1
 282:	f1 f7       	brne	.-4      	; 0x280 <LCD_voidInit+0x1d2>
 284:	00 c0       	rjmp	.+0      	; 0x286 <LCD_voidInit+0x1d8>
 286:	00 00       	nop
 288:	40 e0       	ldi	r20, 0x00	; 0
 28a:	62 e0       	ldi	r22, 0x02	; 2
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 292:	83 ef       	ldi	r24, 0xF3	; 243
 294:	91 e0       	ldi	r25, 0x01	; 1
 296:	01 97       	sbiw	r24, 0x01	; 1
 298:	f1 f7       	brne	.-4      	; 0x296 <LCD_voidInit+0x1e8>
 29a:	00 c0       	rjmp	.+0      	; 0x29c <LCD_voidInit+0x1ee>
 29c:	00 00       	nop
 29e:	41 e0       	ldi	r20, 0x01	; 1
 2a0:	60 e0       	ldi	r22, 0x00	; 0
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 2a8:	40 e0       	ldi	r20, 0x00	; 0
 2aa:	61 e0       	ldi	r22, 0x01	; 1
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 2b2:	40 e0       	ldi	r20, 0x00	; 0
 2b4:	62 e0       	ldi	r22, 0x02	; 2
 2b6:	81 e0       	ldi	r24, 0x01	; 1
 2b8:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 2bc:	40 e0       	ldi	r20, 0x00	; 0
 2be:	64 e0       	ldi	r22, 0x04	; 4
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 2c6:	41 e0       	ldi	r20, 0x01	; 1
 2c8:	62 e0       	ldi	r22, 0x02	; 2
 2ca:	80 e0       	ldi	r24, 0x00	; 0
 2cc:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 2d0:	83 ef       	ldi	r24, 0xF3	; 243
 2d2:	91 e0       	ldi	r25, 0x01	; 1
 2d4:	01 97       	sbiw	r24, 0x01	; 1
 2d6:	f1 f7       	brne	.-4      	; 0x2d4 <LCD_voidInit+0x226>
 2d8:	00 c0       	rjmp	.+0      	; 0x2da <LCD_voidInit+0x22c>
 2da:	00 00       	nop
 2dc:	40 e0       	ldi	r20, 0x00	; 0
 2de:	62 e0       	ldi	r22, 0x02	; 2
 2e0:	80 e0       	ldi	r24, 0x00	; 0
 2e2:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 2e6:	83 ef       	ldi	r24, 0xF3	; 243
 2e8:	91 e0       	ldi	r25, 0x01	; 1
 2ea:	01 97       	sbiw	r24, 0x01	; 1
 2ec:	f1 f7       	brne	.-4      	; 0x2ea <LCD_voidInit+0x23c>
 2ee:	00 c0       	rjmp	.+0      	; 0x2f0 <LCD_voidInit+0x242>
 2f0:	00 00       	nop
 2f2:	40 e0       	ldi	r20, 0x00	; 0
 2f4:	60 e0       	ldi	r22, 0x00	; 0
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 2fc:	40 e0       	ldi	r20, 0x00	; 0
 2fe:	61 e0       	ldi	r22, 0x01	; 1
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 306:	40 e0       	ldi	r20, 0x00	; 0
 308:	62 e0       	ldi	r22, 0x02	; 2
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 310:	40 e0       	ldi	r20, 0x00	; 0
 312:	64 e0       	ldi	r22, 0x04	; 4
 314:	81 e0       	ldi	r24, 0x01	; 1
 316:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 31a:	41 e0       	ldi	r20, 0x01	; 1
 31c:	62 e0       	ldi	r22, 0x02	; 2
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 324:	83 ef       	ldi	r24, 0xF3	; 243
 326:	91 e0       	ldi	r25, 0x01	; 1
 328:	01 97       	sbiw	r24, 0x01	; 1
 32a:	f1 f7       	brne	.-4      	; 0x328 <LCD_voidInit+0x27a>
 32c:	00 c0       	rjmp	.+0      	; 0x32e <LCD_voidInit+0x280>
 32e:	00 00       	nop
 330:	40 e0       	ldi	r20, 0x00	; 0
 332:	62 e0       	ldi	r22, 0x02	; 2
 334:	80 e0       	ldi	r24, 0x00	; 0
 336:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 33a:	83 ef       	ldi	r24, 0xF3	; 243
 33c:	91 e0       	ldi	r25, 0x01	; 1
 33e:	01 97       	sbiw	r24, 0x01	; 1
 340:	f1 f7       	brne	.-4      	; 0x33e <LCD_voidInit+0x290>
 342:	00 c0       	rjmp	.+0      	; 0x344 <LCD_voidInit+0x296>
 344:	00 00       	nop
 346:	41 e0       	ldi	r20, 0x01	; 1
 348:	60 e0       	ldi	r22, 0x00	; 0
 34a:	81 e0       	ldi	r24, 0x01	; 1
 34c:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 350:	41 e0       	ldi	r20, 0x01	; 1
 352:	61 e0       	ldi	r22, 0x01	; 1
 354:	81 e0       	ldi	r24, 0x01	; 1
 356:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 35a:	41 e0       	ldi	r20, 0x01	; 1
 35c:	62 e0       	ldi	r22, 0x02	; 2
 35e:	81 e0       	ldi	r24, 0x01	; 1
 360:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 364:	40 e0       	ldi	r20, 0x00	; 0
 366:	64 e0       	ldi	r22, 0x04	; 4
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 36e:	41 e0       	ldi	r20, 0x01	; 1
 370:	62 e0       	ldi	r22, 0x02	; 2
 372:	80 e0       	ldi	r24, 0x00	; 0
 374:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 378:	83 ef       	ldi	r24, 0xF3	; 243
 37a:	91 e0       	ldi	r25, 0x01	; 1
 37c:	01 97       	sbiw	r24, 0x01	; 1
 37e:	f1 f7       	brne	.-4      	; 0x37c <LCD_voidInit+0x2ce>
 380:	00 c0       	rjmp	.+0      	; 0x382 <LCD_voidInit+0x2d4>
 382:	00 00       	nop
 384:	40 e0       	ldi	r20, 0x00	; 0
 386:	62 e0       	ldi	r22, 0x02	; 2
 388:	80 e0       	ldi	r24, 0x00	; 0
 38a:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 38e:	83 ef       	ldi	r24, 0xF3	; 243
 390:	91 e0       	ldi	r25, 0x01	; 1
 392:	01 97       	sbiw	r24, 0x01	; 1
 394:	f1 f7       	brne	.-4      	; 0x392 <LCD_voidInit+0x2e4>
 396:	00 c0       	rjmp	.+0      	; 0x398 <LCD_voidInit+0x2ea>
 398:	00 00       	nop
 39a:	08 95       	ret

Disassembly of section .text.LCD_voidSendData:

0000057e <LCD_voidSendData>:
	DIO_voidSetPinValue(CTRL_PORT,EN,PIN_LOW);
	_delay_ms(2);
}

void LCD_voidSendData(u8 Data)
{
 57e:	cf 93       	push	r28
 580:	c8 2f       	mov	r28, r24
	/*Set RS pin to high for Data*/
	DIO_voidSetPinValue(CTRL_PORT,RS,PIN_HIGH);
 582:	41 e0       	ldi	r20, 0x01	; 1
 584:	63 e0       	ldi	r22, 0x03	; 3
 586:	80 e0       	ldi	r24, 0x00	; 0
 588:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
	
	/*Send Data*/
	DIO_voidSetPinValue(DATA_PORT,D4,GET_BIT(Data,4));
 58c:	c4 fb       	bst	r28, 4
 58e:	44 27       	eor	r20, r20
 590:	40 f9       	bld	r20, 0
 592:	60 e0       	ldi	r22, 0x00	; 0
 594:	81 e0       	ldi	r24, 0x01	; 1
 596:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DATA_PORT,D5,GET_BIT(Data,5));
 59a:	c5 fb       	bst	r28, 5
 59c:	44 27       	eor	r20, r20
 59e:	40 f9       	bld	r20, 0
 5a0:	61 e0       	ldi	r22, 0x01	; 1
 5a2:	81 e0       	ldi	r24, 0x01	; 1
 5a4:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DATA_PORT,D6,GET_BIT(Data,6));
 5a8:	c6 fb       	bst	r28, 6
 5aa:	44 27       	eor	r20, r20
 5ac:	40 f9       	bld	r20, 0
 5ae:	62 e0       	ldi	r22, 0x02	; 2
 5b0:	81 e0       	ldi	r24, 0x01	; 1
 5b2:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DATA_PORT,D7,GET_BIT(Data,7));
 5b6:	4c 2f       	mov	r20, r28
 5b8:	44 1f       	adc	r20, r20
 5ba:	44 27       	eor	r20, r20
 5bc:	44 1f       	adc	r20, r20
 5be:	64 e0       	ldi	r22, 0x04	; 4
 5c0:	81 e0       	ldi	r24, 0x01	; 1
 5c2:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
	
	/*Enable Trigger high then after 2ms low*/
	DIO_voidSetPinValue(CTRL_PORT,EN,PIN_HIGH);
 5c6:	41 e0       	ldi	r20, 0x01	; 1
 5c8:	62 e0       	ldi	r22, 0x02	; 2
 5ca:	80 e0       	ldi	r24, 0x00	; 0
 5cc:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5d0:	89 ef       	ldi	r24, 0xF9	; 249
 5d2:	90 e0       	ldi	r25, 0x00	; 0
 5d4:	01 97       	sbiw	r24, 0x01	; 1
 5d6:	f1 f7       	brne	.-4      	; 0x5d4 <LCD_voidSendData+0x56>
 5d8:	00 c0       	rjmp	.+0      	; 0x5da <LCD_voidSendData+0x5c>
 5da:	00 00       	nop
	_delay_ms(1);
	DIO_voidSetPinValue(CTRL_PORT,EN,PIN_LOW);
 5dc:	40 e0       	ldi	r20, 0x00	; 0
 5de:	62 e0       	ldi	r22, 0x02	; 2
 5e0:	80 e0       	ldi	r24, 0x00	; 0
 5e2:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 5e6:	89 ef       	ldi	r24, 0xF9	; 249
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	01 97       	sbiw	r24, 0x01	; 1
 5ec:	f1 f7       	brne	.-4      	; 0x5ea <LCD_voidSendData+0x6c>
 5ee:	00 c0       	rjmp	.+0      	; 0x5f0 <LCD_voidSendData+0x72>
 5f0:	00 00       	nop
	_delay_ms(1);
	DIO_voidSetPinValue(DATA_PORT,D4,GET_BIT(Data,0));
 5f2:	4c 2f       	mov	r20, r28
 5f4:	41 70       	andi	r20, 0x01	; 1
 5f6:	60 e0       	ldi	r22, 0x00	; 0
 5f8:	81 e0       	ldi	r24, 0x01	; 1
 5fa:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DATA_PORT,D5,GET_BIT(Data,1));
 5fe:	c1 fb       	bst	r28, 1
 600:	44 27       	eor	r20, r20
 602:	40 f9       	bld	r20, 0
 604:	61 e0       	ldi	r22, 0x01	; 1
 606:	81 e0       	ldi	r24, 0x01	; 1
 608:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DATA_PORT,D6,GET_BIT(Data,2));
 60c:	c2 fb       	bst	r28, 2
 60e:	44 27       	eor	r20, r20
 610:	40 f9       	bld	r20, 0
 612:	62 e0       	ldi	r22, 0x02	; 2
 614:	81 e0       	ldi	r24, 0x01	; 1
 616:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DATA_PORT,D7,GET_BIT(Data,3));
 61a:	c3 fb       	bst	r28, 3
 61c:	44 27       	eor	r20, r20
 61e:	40 f9       	bld	r20, 0
 620:	64 e0       	ldi	r22, 0x04	; 4
 622:	81 e0       	ldi	r24, 0x01	; 1
 624:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
	
	DIO_voidSetPinValue(CTRL_PORT,EN,PIN_HIGH);
 628:	41 e0       	ldi	r20, 0x01	; 1
 62a:	62 e0       	ldi	r22, 0x02	; 2
 62c:	80 e0       	ldi	r24, 0x00	; 0
 62e:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 632:	89 ef       	ldi	r24, 0xF9	; 249
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	01 97       	sbiw	r24, 0x01	; 1
 638:	f1 f7       	brne	.-4      	; 0x636 <LCD_voidSendData+0xb8>
 63a:	00 c0       	rjmp	.+0      	; 0x63c <LCD_voidSendData+0xbe>
 63c:	00 00       	nop
	_delay_ms(1);
	DIO_voidSetPinValue(CTRL_PORT,EN,PIN_LOW);
 63e:	40 e0       	ldi	r20, 0x00	; 0
 640:	62 e0       	ldi	r22, 0x02	; 2
 642:	80 e0       	ldi	r24, 0x00	; 0
 644:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 648:	89 ef       	ldi	r24, 0xF9	; 249
 64a:	90 e0       	ldi	r25, 0x00	; 0
 64c:	01 97       	sbiw	r24, 0x01	; 1
 64e:	f1 f7       	brne	.-4      	; 0x64c <LCD_voidSendData+0xce>
 650:	00 c0       	rjmp	.+0      	; 0x652 <LCD_voidSendData+0xd4>
 652:	00 00       	nop
	_delay_ms(1);
}
 654:	cf 91       	pop	r28
 656:	08 95       	ret

Disassembly of section .text.LCD_voidGoToXY:

0000039c <LCD_voidGoToXY>:
		Counter++;
	}
}

void LCD_voidGoToXY(u8 X_Pos, u8 Y_Pos)
{
 39c:	cf 93       	push	r28
	u8 Address=0;
	/*Location at First line*/
	if(X_Pos==0)
 39e:	81 11       	cpse	r24, r1
 3a0:	03 c0       	rjmp	.+6      	; 0x3a8 <LCD_voidGoToXY+0xc>
	{
		Address = Y_Pos + 0x80;
 3a2:	c0 e8       	ldi	r28, 0x80	; 128
 3a4:	c6 0f       	add	r28, r22
 3a6:	10 c0       	rjmp	.+32     	; 0x3c8 <LCD_voidGoToXY+0x2c>
	}
	/*Location at Second line*/
	else if(X_Pos==1)
 3a8:	81 30       	cpi	r24, 0x01	; 1
 3aa:	19 f4       	brne	.+6      	; 0x3b2 <LCD_voidGoToXY+0x16>
	{
		Address = Y_Pos + 0xC0;
 3ac:	c0 ec       	ldi	r28, 0xC0	; 192
 3ae:	c6 0f       	add	r28, r22
 3b0:	0b c0       	rjmp	.+22     	; 0x3c8 <LCD_voidGoToXY+0x2c>
	}
	/*Location at third line*/
	else if(X_Pos==2)
 3b2:	82 30       	cpi	r24, 0x02	; 2
 3b4:	19 f4       	brne	.+6      	; 0x3bc <LCD_voidGoToXY+0x20>
	{
		Address = Y_Pos + 0x94;
 3b6:	c4 e9       	ldi	r28, 0x94	; 148
 3b8:	c6 0f       	add	r28, r22
 3ba:	06 c0       	rjmp	.+12     	; 0x3c8 <LCD_voidGoToXY+0x2c>
	}
	/*Location at fourth line*/
	else if(X_Pos==3)
 3bc:	83 30       	cpi	r24, 0x03	; 3
 3be:	19 f4       	brne	.+6      	; 0x3c6 <LCD_voidGoToXY+0x2a>
	{
		Address = Y_Pos + 0xd4;
 3c0:	c4 ed       	ldi	r28, 0xD4	; 212
 3c2:	c6 0f       	add	r28, r22
 3c4:	01 c0       	rjmp	.+2      	; 0x3c8 <LCD_voidGoToXY+0x2c>
	}
}

void LCD_voidGoToXY(u8 X_Pos, u8 Y_Pos)
{
	u8 Address=0;
 3c6:	c0 e0       	ldi	r28, 0x00	; 0
	}
	
	///Set DDRAM Address Command////
	
	/*Set RS pin to low for command*/
	DIO_voidSetPinValue(CTRL_PORT,RS,PIN_LOW);
 3c8:	40 e0       	ldi	r20, 0x00	; 0
 3ca:	63 e0       	ldi	r22, 0x03	; 3
 3cc:	80 e0       	ldi	r24, 0x00	; 0
 3ce:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
	
	/*Send Address to Data pins*/
	DIO_voidSetPinValue(DATA_PORT,D4,GET_BIT(Address,4));
 3d2:	c4 fb       	bst	r28, 4
 3d4:	44 27       	eor	r20, r20
 3d6:	40 f9       	bld	r20, 0
 3d8:	60 e0       	ldi	r22, 0x00	; 0
 3da:	81 e0       	ldi	r24, 0x01	; 1
 3dc:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DATA_PORT,D5,GET_BIT(Address,5));
 3e0:	c5 fb       	bst	r28, 5
 3e2:	44 27       	eor	r20, r20
 3e4:	40 f9       	bld	r20, 0
 3e6:	61 e0       	ldi	r22, 0x01	; 1
 3e8:	81 e0       	ldi	r24, 0x01	; 1
 3ea:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DATA_PORT,D6,GET_BIT(Address,6));
 3ee:	c6 fb       	bst	r28, 6
 3f0:	44 27       	eor	r20, r20
 3f2:	40 f9       	bld	r20, 0
 3f4:	62 e0       	ldi	r22, 0x02	; 2
 3f6:	81 e0       	ldi	r24, 0x01	; 1
 3f8:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
	/*Set D7 high*/
	DIO_voidSetPinValue(DATA_PORT,D7,PIN_HIGH);
 3fc:	41 e0       	ldi	r20, 0x01	; 1
 3fe:	64 e0       	ldi	r22, 0x04	; 4
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
	
	/*Enable Trigger high then after 2ms low*/
	DIO_voidSetPinValue(CTRL_PORT,EN,PIN_HIGH);
 406:	41 e0       	ldi	r20, 0x01	; 1
 408:	62 e0       	ldi	r22, 0x02	; 2
 40a:	80 e0       	ldi	r24, 0x00	; 0
 40c:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 410:	89 ef       	ldi	r24, 0xF9	; 249
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	01 97       	sbiw	r24, 0x01	; 1
 416:	f1 f7       	brne	.-4      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 418:	00 c0       	rjmp	.+0      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 41a:	00 00       	nop
	_delay_ms(1);
	DIO_voidSetPinValue(CTRL_PORT,EN,PIN_LOW);
 41c:	40 e0       	ldi	r20, 0x00	; 0
 41e:	62 e0       	ldi	r22, 0x02	; 2
 420:	80 e0       	ldi	r24, 0x00	; 0
 422:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 426:	89 ef       	ldi	r24, 0xF9	; 249
 428:	90 e0       	ldi	r25, 0x00	; 0
 42a:	01 97       	sbiw	r24, 0x01	; 1
 42c:	f1 f7       	brne	.-4      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 42e:	00 c0       	rjmp	.+0      	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 430:	00 00       	nop
	_delay_ms(1);
	
	DIO_voidSetPinValue(DATA_PORT,D4,GET_BIT(Address,0));
 432:	4c 2f       	mov	r20, r28
 434:	41 70       	andi	r20, 0x01	; 1
 436:	60 e0       	ldi	r22, 0x00	; 0
 438:	81 e0       	ldi	r24, 0x01	; 1
 43a:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DATA_PORT,D5,GET_BIT(Address,1));
 43e:	c1 fb       	bst	r28, 1
 440:	44 27       	eor	r20, r20
 442:	40 f9       	bld	r20, 0
 444:	61 e0       	ldi	r22, 0x01	; 1
 446:	81 e0       	ldi	r24, 0x01	; 1
 448:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DATA_PORT,D6,GET_BIT(Address,2));
 44c:	c2 fb       	bst	r28, 2
 44e:	44 27       	eor	r20, r20
 450:	40 f9       	bld	r20, 0
 452:	62 e0       	ldi	r22, 0x02	; 2
 454:	81 e0       	ldi	r24, 0x01	; 1
 456:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DATA_PORT,D7,GET_BIT(Address,3));
 45a:	c3 fb       	bst	r28, 3
 45c:	44 27       	eor	r20, r20
 45e:	40 f9       	bld	r20, 0
 460:	64 e0       	ldi	r22, 0x04	; 4
 462:	81 e0       	ldi	r24, 0x01	; 1
 464:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
	
	DIO_voidSetPinValue(CTRL_PORT,EN,PIN_HIGH);
 468:	41 e0       	ldi	r20, 0x01	; 1
 46a:	62 e0       	ldi	r22, 0x02	; 2
 46c:	80 e0       	ldi	r24, 0x00	; 0
 46e:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 472:	89 ef       	ldi	r24, 0xF9	; 249
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	01 97       	sbiw	r24, 0x01	; 1
 478:	f1 f7       	brne	.-4      	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 47a:	00 c0       	rjmp	.+0      	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 47c:	00 00       	nop
	_delay_ms(1);
	DIO_voidSetPinValue(CTRL_PORT,EN,PIN_LOW);
 47e:	40 e0       	ldi	r20, 0x00	; 0
 480:	62 e0       	ldi	r22, 0x02	; 2
 482:	80 e0       	ldi	r24, 0x00	; 0
 484:	0e 94 4c 02 	call	0x498	; 0x498 <DIO_voidSetPinValue>
 488:	89 ef       	ldi	r24, 0xF9	; 249
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	01 97       	sbiw	r24, 0x01	; 1
 48e:	f1 f7       	brne	.-4      	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
 490:	00 c0       	rjmp	.+0      	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
 492:	00 00       	nop
	_delay_ms(1);
}
 494:	cf 91       	pop	r28
 496:	08 95       	ret

Disassembly of section .text.LCD_voidWriteNumber:

00000658 <LCD_voidWriteNumber>:

void LCD_voidWriteNumber(u16 Number)
{
 658:	1f 93       	push	r17
 65a:	cf 93       	push	r28
 65c:	df 93       	push	r29
 65e:	00 d0       	rcall	.+0      	; 0x660 <LCD_voidWriteNumber+0x8>
 660:	00 d0       	rcall	.+0      	; 0x662 <LCD_voidWriteNumber+0xa>
 662:	cd b7       	in	r28, 0x3d	; 61
 664:	de b7       	in	r29, 0x3e	; 62
 666:	ac 01       	movw	r20, r24
	u16 temp;
	u8 Idx,Arr[SIZE_ARRAY_NUMBERS],Counter=0;
	if(Number==0)
 668:	89 2b       	or	r24, r25
 66a:	81 f5       	brne	.+96     	; 0x6cc <LCD_voidWriteNumber+0x74>
	{
		LCD_voidSendData('0');
 66c:	80 e3       	ldi	r24, 0x30	; 48
 66e:	0e 94 bf 02 	call	0x57e	; 0x57e <LCD_voidSendData>
 672:	41 c0       	rjmp	.+130    	; 0x6f6 <LCD_voidWriteNumber+0x9e>
	}
	else
	{
	while(Number!=0)
	{
		temp = Number%10;
 674:	9a 01       	movw	r18, r20
 676:	ad ec       	ldi	r26, 0xCD	; 205
 678:	bc ec       	ldi	r27, 0xCC	; 204
 67a:	0e 94 dd 04 	call	0x9ba	; 0x9ba <__umulhisi3>
 67e:	96 95       	lsr	r25
 680:	87 95       	ror	r24
 682:	96 95       	lsr	r25
 684:	87 95       	ror	r24
 686:	96 95       	lsr	r25
 688:	87 95       	ror	r24
 68a:	9c 01       	movw	r18, r24
 68c:	22 0f       	add	r18, r18
 68e:	33 1f       	adc	r19, r19
 690:	88 0f       	add	r24, r24
 692:	99 1f       	adc	r25, r25
 694:	88 0f       	add	r24, r24
 696:	99 1f       	adc	r25, r25
 698:	88 0f       	add	r24, r24
 69a:	99 1f       	adc	r25, r25
 69c:	82 0f       	add	r24, r18
 69e:	93 1f       	adc	r25, r19
 6a0:	9a 01       	movw	r18, r20
 6a2:	28 1b       	sub	r18, r24
 6a4:	39 0b       	sbc	r19, r25
		Arr[Counter] = temp;
 6a6:	e1 e0       	ldi	r30, 0x01	; 1
 6a8:	f0 e0       	ldi	r31, 0x00	; 0
 6aa:	ec 0f       	add	r30, r28
 6ac:	fd 1f       	adc	r31, r29
 6ae:	e1 0f       	add	r30, r17
 6b0:	f1 1d       	adc	r31, r1
 6b2:	20 83       	st	Z, r18
		Number/=10;
 6b4:	9a 01       	movw	r18, r20
 6b6:	0e 94 dd 04 	call	0x9ba	; 0x9ba <__umulhisi3>
 6ba:	ac 01       	movw	r20, r24
 6bc:	56 95       	lsr	r21
 6be:	47 95       	ror	r20
 6c0:	56 95       	lsr	r21
 6c2:	47 95       	ror	r20
 6c4:	56 95       	lsr	r21
 6c6:	47 95       	ror	r20
		Counter++;
 6c8:	1f 5f       	subi	r17, 0xFF	; 255
 6ca:	01 c0       	rjmp	.+2      	; 0x6ce <LCD_voidWriteNumber+0x76>
 6cc:	10 e0       	ldi	r17, 0x00	; 0
	{
		LCD_voidSendData('0');
	}
	else
	{
	while(Number!=0)
 6ce:	41 15       	cp	r20, r1
 6d0:	51 05       	cpc	r21, r1
 6d2:	81 f6       	brne	.-96     	; 0x674 <LCD_voidWriteNumber+0x1c>
 6d4:	0e c0       	rjmp	.+28     	; 0x6f2 <LCD_voidWriteNumber+0x9a>
		Counter++;
	}
	
			for(Idx=Counter; Idx>0;Idx--)
			{
				LCD_voidSendData(Arr[Idx-1] + 48);//+ 48 for  represented integer for characters.
 6d6:	e1 2f       	mov	r30, r17
 6d8:	f0 e0       	ldi	r31, 0x00	; 0
 6da:	31 97       	sbiw	r30, 0x01	; 1
 6dc:	81 e0       	ldi	r24, 0x01	; 1
 6de:	90 e0       	ldi	r25, 0x00	; 0
 6e0:	8c 0f       	add	r24, r28
 6e2:	9d 1f       	adc	r25, r29
 6e4:	e8 0f       	add	r30, r24
 6e6:	f9 1f       	adc	r31, r25
 6e8:	80 81       	ld	r24, Z
 6ea:	80 5d       	subi	r24, 0xD0	; 208
 6ec:	0e 94 bf 02 	call	0x57e	; 0x57e <LCD_voidSendData>
		Arr[Counter] = temp;
		Number/=10;
		Counter++;
	}
	
			for(Idx=Counter; Idx>0;Idx--)
 6f0:	11 50       	subi	r17, 0x01	; 1
 6f2:	11 11       	cpse	r17, r1
 6f4:	f0 cf       	rjmp	.-32     	; 0x6d6 <LCD_voidWriteNumber+0x7e>
			{
				LCD_voidSendData(Arr[Idx-1] + 48);//+ 48 for  represented integer for characters.
			}
	}	
}
 6f6:	0f 90       	pop	r0
 6f8:	0f 90       	pop	r0
 6fa:	0f 90       	pop	r0
 6fc:	0f 90       	pop	r0
 6fe:	df 91       	pop	r29
 700:	cf 91       	pop	r28
 702:	1f 91       	pop	r17
 704:	08 95       	ret

Disassembly of section .text.Map:

00000706 <Map>:
		_delay_ms(10);
    }
}

s32 Map(s32 In_min, s32 In_max, s32 out_min, s32 out_max, s32 x)
{	
 706:	4f 92       	push	r4
 708:	5f 92       	push	r5
 70a:	6f 92       	push	r6
 70c:	7f 92       	push	r7
 70e:	af 92       	push	r10
 710:	bf 92       	push	r11
 712:	cf 92       	push	r12
 714:	df 92       	push	r13
 716:	ef 92       	push	r14
 718:	ff 92       	push	r15
 71a:	0f 93       	push	r16
 71c:	1f 93       	push	r17
 71e:	cf 93       	push	r28
 720:	df 93       	push	r29
 722:	00 d0       	rcall	.+0      	; 0x724 <Map+0x1e>
 724:	00 d0       	rcall	.+0      	; 0x726 <Map+0x20>
 726:	cd b7       	in	r28, 0x3d	; 61
 728:	de b7       	in	r29, 0x3e	; 62
 72a:	2b 01       	movw	r4, r22
 72c:	3c 01       	movw	r6, r24
 72e:	29 83       	std	Y+1, r18	; 0x01
 730:	3a 83       	std	Y+2, r19	; 0x02
 732:	4b 83       	std	Y+3, r20	; 0x03
 734:	5c 83       	std	Y+4, r21	; 0x04
	return (((x - In_min)*(out_max - out_min)) / (In_max - In_min)) + out_min;
 736:	8d 89       	ldd	r24, Y+21	; 0x15
 738:	9e 89       	ldd	r25, Y+22	; 0x16
 73a:	af 89       	ldd	r26, Y+23	; 0x17
 73c:	b8 8d       	ldd	r27, Y+24	; 0x18
 73e:	9c 01       	movw	r18, r24
 740:	ad 01       	movw	r20, r26
 742:	24 19       	sub	r18, r4
 744:	35 09       	sbc	r19, r5
 746:	46 09       	sbc	r20, r6
 748:	57 09       	sbc	r21, r7
 74a:	c6 01       	movw	r24, r12
 74c:	b5 01       	movw	r22, r10
 74e:	6e 19       	sub	r22, r14
 750:	7f 09       	sbc	r23, r15
 752:	80 0b       	sbc	r24, r16
 754:	91 0b       	sbc	r25, r17
 756:	0e 94 cd 04 	call	0x99a	; 0x99a <__mulsi3>
 75a:	29 81       	ldd	r18, Y+1	; 0x01
 75c:	3a 81       	ldd	r19, Y+2	; 0x02
 75e:	4b 81       	ldd	r20, Y+3	; 0x03
 760:	5c 81       	ldd	r21, Y+4	; 0x04
 762:	24 19       	sub	r18, r4
 764:	35 09       	sbc	r19, r5
 766:	46 09       	sbc	r20, r6
 768:	57 09       	sbc	r21, r7
 76a:	0e 94 b6 04 	call	0x96c	; 0x96c <__divmodsi4>
 76e:	c8 01       	movw	r24, r16
 770:	b7 01       	movw	r22, r14
 772:	62 0f       	add	r22, r18
 774:	73 1f       	adc	r23, r19
 776:	84 1f       	adc	r24, r20
 778:	95 1f       	adc	r25, r21
 77a:	0f 90       	pop	r0
 77c:	0f 90       	pop	r0
 77e:	0f 90       	pop	r0
 780:	0f 90       	pop	r0
 782:	df 91       	pop	r29
 784:	cf 91       	pop	r28
 786:	1f 91       	pop	r17
 788:	0f 91       	pop	r16
 78a:	ff 90       	pop	r15
 78c:	ef 90       	pop	r14
 78e:	df 90       	pop	r13
 790:	cf 90       	pop	r12
 792:	bf 90       	pop	r11
 794:	af 90       	pop	r10
 796:	7f 90       	pop	r7
 798:	6f 90       	pop	r6
 79a:	5f 90       	pop	r5
 79c:	4f 90       	pop	r4
 79e:	08 95       	ret

Disassembly of section .text.main:

000007a0 <main>:

s32 Map(s32 In_min, s32 In_max, s32 out_min, s32 out_max, s32 x);

int main(void)
{
	DIO_VoidInit();
 7a0:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <DIO_VoidInit>
	LCD_voidInit();
 7a4:	0e 94 57 00 	call	0xae	; 0xae <__data_load_end>
	Timer1_voidInit();
 7a8:	0e 94 17 04 	call	0x82e	; 0x82e <Timer1_voidInit>
	Timer1_voidSetICRValue(20000);
 7ac:	80 e2       	ldi	r24, 0x20	; 32
 7ae:	9e e4       	ldi	r25, 0x4E	; 78
 7b0:	0e 94 32 05 	call	0xa64	; 0xa64 <Timer1_voidSetICRValue>
	ADC_voidInit();
 7b4:	0e 94 9a 04 	call	0x934	; 0x934 <ADC_voidInit>
	ADC_voidEnable();
 7b8:	0e 94 27 05 	call	0xa4e	; 0xa4e <ADC_voidEnable>
	u32 result;
	u16 read;
    while(1)
    {
		ADC_Channel();
 7bc:	0e 94 21 05 	call	0xa42	; 0xa42 <ADC_Channel>
		ADC_voidStartConversion();
 7c0:	0e 94 2b 05 	call	0xa56	; 0xa56 <ADC_voidStartConversion>
		read = ADC_u16GetChannelReading();
 7c4:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <ADC_u16GetChannelReading>
 7c8:	ec 01       	movw	r28, r24
		result = Map(0,1023,1000,2000,read); // Potentiometer , Servo Angel(0 pos to 180 pos) , ADC reading
 7ca:	1f 92       	push	r1
 7cc:	1f 92       	push	r1
 7ce:	9f 93       	push	r25
 7d0:	8f 93       	push	r24
 7d2:	0f 2e       	mov	r0, r31
 7d4:	f0 ed       	ldi	r31, 0xD0	; 208
 7d6:	af 2e       	mov	r10, r31
 7d8:	f7 e0       	ldi	r31, 0x07	; 7
 7da:	bf 2e       	mov	r11, r31
 7dc:	c1 2c       	mov	r12, r1
 7de:	d1 2c       	mov	r13, r1
 7e0:	f0 2d       	mov	r31, r0
 7e2:	18 ee       	ldi	r17, 0xE8	; 232
 7e4:	e1 2e       	mov	r14, r17
 7e6:	13 e0       	ldi	r17, 0x03	; 3
 7e8:	f1 2e       	mov	r15, r17
 7ea:	00 e0       	ldi	r16, 0x00	; 0
 7ec:	10 e0       	ldi	r17, 0x00	; 0
 7ee:	2f ef       	ldi	r18, 0xFF	; 255
 7f0:	33 e0       	ldi	r19, 0x03	; 3
 7f2:	40 e0       	ldi	r20, 0x00	; 0
 7f4:	50 e0       	ldi	r21, 0x00	; 0
 7f6:	60 e0       	ldi	r22, 0x00	; 0
 7f8:	70 e0       	ldi	r23, 0x00	; 0
 7fa:	cb 01       	movw	r24, r22
 7fc:	0e 94 83 03 	call	0x706	; 0x706 <Map>
 800:	0f 90       	pop	r0
 802:	0f 90       	pop	r0
 804:	0f 90       	pop	r0
 806:	0f 90       	pop	r0
 808:	6b 01       	movw	r12, r22
 80a:	7c 01       	movw	r14, r24
		LCD_voidGoToXY(0,0);
 80c:	60 e0       	ldi	r22, 0x00	; 0
 80e:	80 e0       	ldi	r24, 0x00	; 0
 810:	0e 94 ce 01 	call	0x39c	; 0x39c <LCD_voidGoToXY>
		LCD_voidWriteNumber(read);
 814:	ce 01       	movw	r24, r28
 816:	0e 94 2c 03 	call	0x658	; 0x658 <LCD_voidWriteNumber>
		Timer1_voidSetOCRValue(result);
 81a:	c6 01       	movw	r24, r12
 81c:	0e 94 2f 05 	call	0xa5e	; 0xa5e <Timer1_voidSetOCRValue>
 820:	8f e1       	ldi	r24, 0x1F	; 31
 822:	9e e4       	ldi	r25, 0x4E	; 78
 824:	01 97       	sbiw	r24, 0x01	; 1
 826:	f1 f7       	brne	.-4      	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 828:	00 c0       	rjmp	.+0      	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 82a:	00 00       	nop
 82c:	c7 cf       	rjmp	.-114    	; 0x7bc <main+0x1c>

Disassembly of section .text.Timer1_voidInit:

0000082e <Timer1_voidInit>:
}

u16 Timer1_ICRRead(void)
{
	return ICR1;
}
 82e:	8f b5       	in	r24, 0x2f	; 47
 830:	8e 7f       	andi	r24, 0xFE	; 254
 832:	8f bd       	out	0x2f, r24	; 47
 834:	8f b5       	in	r24, 0x2f	; 47
 836:	82 60       	ori	r24, 0x02	; 2
 838:	8f bd       	out	0x2f, r24	; 47
 83a:	8e b5       	in	r24, 0x2e	; 46
 83c:	88 60       	ori	r24, 0x08	; 8
 83e:	8e bd       	out	0x2e, r24	; 46
 840:	8e b5       	in	r24, 0x2e	; 46
 842:	80 61       	ori	r24, 0x10	; 16
 844:	8e bd       	out	0x2e, r24	; 46
 846:	8f b5       	in	r24, 0x2f	; 47
 848:	80 68       	ori	r24, 0x80	; 128
 84a:	8f bd       	out	0x2f, r24	; 47
 84c:	8f b5       	in	r24, 0x2f	; 47
 84e:	8f 7b       	andi	r24, 0xBF	; 191
 850:	8f bd       	out	0x2f, r24	; 47
 852:	8e b5       	in	r24, 0x2e	; 46
 854:	8e 7f       	andi	r24, 0xFE	; 254
 856:	8e bd       	out	0x2e, r24	; 46
 858:	8e b5       	in	r24, 0x2e	; 46
 85a:	82 60       	ori	r24, 0x02	; 2
 85c:	8e bd       	out	0x2e, r24	; 46
 85e:	8e b5       	in	r24, 0x2e	; 46
 860:	8b 7f       	andi	r24, 0xFB	; 251
 862:	8e bd       	out	0x2e, r24	; 46
 864:	1d bc       	out	0x2d, r1	; 45
 866:	1c bc       	out	0x2c, r1	; 44
 868:	1b bc       	out	0x2b, r1	; 43
 86a:	1a bc       	out	0x2a, r1	; 42
 86c:	17 bc       	out	0x27, r1	; 39
 86e:	16 bc       	out	0x26, r1	; 38
 870:	89 b7       	in	r24, 0x39	; 57
 872:	8b 7f       	andi	r24, 0xFB	; 251
 874:	89 bf       	out	0x39, r24	; 57
 876:	89 b7       	in	r24, 0x39	; 57
 878:	8f 7e       	andi	r24, 0xEF	; 239
 87a:	89 bf       	out	0x39, r24	; 57
 87c:	89 b7       	in	r24, 0x39	; 57
 87e:	87 7f       	andi	r24, 0xF7	; 247
 880:	89 bf       	out	0x39, r24	; 57
 882:	89 b7       	in	r24, 0x39	; 57
 884:	8f 7d       	andi	r24, 0xDF	; 223
 886:	89 bf       	out	0x39, r24	; 57
 888:	88 b7       	in	r24, 0x38	; 56
 88a:	8b 7f       	andi	r24, 0xFB	; 251
 88c:	88 bf       	out	0x38, r24	; 56
 88e:	88 b7       	in	r24, 0x38	; 56
 890:	87 7f       	andi	r24, 0xF7	; 247
 892:	88 bf       	out	0x38, r24	; 56
 894:	88 b7       	in	r24, 0x38	; 56
 896:	8f 7e       	andi	r24, 0xEF	; 239
 898:	88 bf       	out	0x38, r24	; 56
 89a:	88 b7       	in	r24, 0x38	; 56
 89c:	8f 7d       	andi	r24, 0xDF	; 223
 89e:	88 bf       	out	0x38, r24	; 56
 8a0:	08 95       	ret

Disassembly of section .text.Timer1_voidSetOCRValue:

00000a5e <Timer1_voidSetOCRValue>:

void Timer1_voidSetOCRValue(u16 Value)
{
	OCR1A = Value;
 a5e:	9b bd       	out	0x2b, r25	; 43
 a60:	8a bd       	out	0x2a, r24	; 42
 a62:	08 95       	ret

Disassembly of section .text.Timer1_voidSetICRValue:

00000a64 <Timer1_voidSetICRValue>:
}

void Timer1_voidSetICRValue(u16 Value)
{
	ICR1 = Value;
 a64:	97 bd       	out	0x27, r25	; 39
 a66:	86 bd       	out	0x26, r24	; 38
 a68:	08 95       	ret

Disassembly of section .text.__vector_6:

000008a2 <__vector_6>:
}

u16 Timer1_ICRRead(void)
{
	return ICR1;
}
 8a2:	1f 92       	push	r1
 8a4:	0f 92       	push	r0
 8a6:	0f b6       	in	r0, 0x3f	; 63
 8a8:	0f 92       	push	r0
 8aa:	11 24       	eor	r1, r1
 8ac:	2f 93       	push	r18
 8ae:	3f 93       	push	r19
 8b0:	4f 93       	push	r20
 8b2:	5f 93       	push	r21
 8b4:	6f 93       	push	r22
 8b6:	7f 93       	push	r23
 8b8:	8f 93       	push	r24
 8ba:	9f 93       	push	r25
 8bc:	af 93       	push	r26
 8be:	bf 93       	push	r27
 8c0:	ef 93       	push	r30
 8c2:	ff 93       	push	r31
 8c4:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 8c8:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 8cc:	09 95       	icall
 8ce:	ff 91       	pop	r31
 8d0:	ef 91       	pop	r30
 8d2:	bf 91       	pop	r27
 8d4:	af 91       	pop	r26
 8d6:	9f 91       	pop	r25
 8d8:	8f 91       	pop	r24
 8da:	7f 91       	pop	r23
 8dc:	6f 91       	pop	r22
 8de:	5f 91       	pop	r21
 8e0:	4f 91       	pop	r20
 8e2:	3f 91       	pop	r19
 8e4:	2f 91       	pop	r18
 8e6:	0f 90       	pop	r0
 8e8:	0f be       	out	0x3f, r0	; 63
 8ea:	0f 90       	pop	r0
 8ec:	1f 90       	pop	r1
 8ee:	18 95       	reti

Disassembly of section .text.libgcc.mul:

0000099a <__mulsi3>:
 99a:	db 01       	movw	r26, r22
 99c:	8f 93       	push	r24
 99e:	9f 93       	push	r25
 9a0:	0e 94 03 05 	call	0xa06	; 0xa06 <__muluhisi3>
 9a4:	bf 91       	pop	r27
 9a6:	af 91       	pop	r26
 9a8:	a2 9f       	mul	r26, r18
 9aa:	80 0d       	add	r24, r0
 9ac:	91 1d       	adc	r25, r1
 9ae:	a3 9f       	mul	r26, r19
 9b0:	90 0d       	add	r25, r0
 9b2:	b2 9f       	mul	r27, r18
 9b4:	90 0d       	add	r25, r0
 9b6:	11 24       	eor	r1, r1
 9b8:	08 95       	ret

Disassembly of section .text.libgcc.div:

0000096c <__divmodsi4>:
 96c:	05 2e       	mov	r0, r21
 96e:	97 fb       	bst	r25, 7
 970:	1e f4       	brtc	.+6      	; 0x978 <__divmodsi4+0xc>
 972:	00 94       	com	r0
 974:	0e 94 19 05 	call	0xa32	; 0xa32 <__negsi2>
 978:	57 fd       	sbrc	r21, 7
 97a:	07 d0       	rcall	.+14     	; 0x98a <__divmodsi4_neg2>
 97c:	0e 94 78 04 	call	0x8f0	; 0x8f0 <__udivmodsi4>
 980:	07 fc       	sbrc	r0, 7
 982:	03 d0       	rcall	.+6      	; 0x98a <__divmodsi4_neg2>
 984:	4e f4       	brtc	.+18     	; 0x998 <__divmodsi4_exit>
 986:	0c 94 19 05 	jmp	0xa32	; 0xa32 <__negsi2>

0000098a <__divmodsi4_neg2>:
 98a:	50 95       	com	r21
 98c:	40 95       	com	r20
 98e:	30 95       	com	r19
 990:	21 95       	neg	r18
 992:	3f 4f       	sbci	r19, 0xFF	; 255
 994:	4f 4f       	sbci	r20, 0xFF	; 255
 996:	5f 4f       	sbci	r21, 0xFF	; 255

00000998 <__divmodsi4_exit>:
 998:	08 95       	ret

Disassembly of section .text.libgcc.div:

00000a32 <__negsi2>:
 a32:	90 95       	com	r25
 a34:	80 95       	com	r24
 a36:	70 95       	com	r23
 a38:	61 95       	neg	r22
 a3a:	7f 4f       	sbci	r23, 0xFF	; 255
 a3c:	8f 4f       	sbci	r24, 0xFF	; 255
 a3e:	9f 4f       	sbci	r25, 0xFF	; 255
 a40:	08 95       	ret

Disassembly of section .text.libgcc.mul:

000009ba <__umulhisi3>:
 9ba:	a2 9f       	mul	r26, r18
 9bc:	b0 01       	movw	r22, r0
 9be:	b3 9f       	mul	r27, r19
 9c0:	c0 01       	movw	r24, r0
 9c2:	a3 9f       	mul	r26, r19
 9c4:	70 0d       	add	r23, r0
 9c6:	81 1d       	adc	r24, r1
 9c8:	11 24       	eor	r1, r1
 9ca:	91 1d       	adc	r25, r1
 9cc:	b2 9f       	mul	r27, r18
 9ce:	70 0d       	add	r23, r0
 9d0:	81 1d       	adc	r24, r1
 9d2:	11 24       	eor	r1, r1
 9d4:	91 1d       	adc	r25, r1
 9d6:	08 95       	ret

Disassembly of section .text.libgcc.mul:

00000a06 <__muluhisi3>:
 a06:	0e 94 dd 04 	call	0x9ba	; 0x9ba <__umulhisi3>
 a0a:	a5 9f       	mul	r26, r21
 a0c:	90 0d       	add	r25, r0
 a0e:	b4 9f       	mul	r27, r20
 a10:	90 0d       	add	r25, r0
 a12:	a4 9f       	mul	r26, r20
 a14:	80 0d       	add	r24, r0
 a16:	91 1d       	adc	r25, r1
 a18:	11 24       	eor	r1, r1
 a1a:	08 95       	ret

Disassembly of section .text.libgcc.div:

000008f0 <__udivmodsi4>:
 8f0:	a1 e2       	ldi	r26, 0x21	; 33
 8f2:	1a 2e       	mov	r1, r26
 8f4:	aa 1b       	sub	r26, r26
 8f6:	bb 1b       	sub	r27, r27
 8f8:	fd 01       	movw	r30, r26
 8fa:	0d c0       	rjmp	.+26     	; 0x916 <__udivmodsi4_ep>

000008fc <__udivmodsi4_loop>:
 8fc:	aa 1f       	adc	r26, r26
 8fe:	bb 1f       	adc	r27, r27
 900:	ee 1f       	adc	r30, r30
 902:	ff 1f       	adc	r31, r31
 904:	a2 17       	cp	r26, r18
 906:	b3 07       	cpc	r27, r19
 908:	e4 07       	cpc	r30, r20
 90a:	f5 07       	cpc	r31, r21
 90c:	20 f0       	brcs	.+8      	; 0x916 <__udivmodsi4_ep>
 90e:	a2 1b       	sub	r26, r18
 910:	b3 0b       	sbc	r27, r19
 912:	e4 0b       	sbc	r30, r20
 914:	f5 0b       	sbc	r31, r21

00000916 <__udivmodsi4_ep>:
 916:	66 1f       	adc	r22, r22
 918:	77 1f       	adc	r23, r23
 91a:	88 1f       	adc	r24, r24
 91c:	99 1f       	adc	r25, r25
 91e:	1a 94       	dec	r1
 920:	69 f7       	brne	.-38     	; 0x8fc <__udivmodsi4_loop>
 922:	60 95       	com	r22
 924:	70 95       	com	r23
 926:	80 95       	com	r24
 928:	90 95       	com	r25
 92a:	9b 01       	movw	r18, r22
 92c:	ac 01       	movw	r20, r24
 92e:	bd 01       	movw	r22, r26
 930:	cf 01       	movw	r24, r30
 932:	08 95       	ret

Disassembly of section .text.__dummy_fini:

00000a72 <_fini>:
 a72:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000a74 <__funcs_on_exit>:
 a74:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000a76 <__simulator_exit>:
 a76:	08 95       	ret

Disassembly of section .text.exit:

00000a1c <exit>:
 a1c:	ec 01       	movw	r28, r24
 a1e:	0e 94 3a 05 	call	0xa74	; 0xa74 <__funcs_on_exit>
 a22:	0e 94 39 05 	call	0xa72	; 0xa72 <_fini>
 a26:	ce 01       	movw	r24, r28
 a28:	0e 94 3b 05 	call	0xa76	; 0xa76 <__simulator_exit>
 a2c:	ce 01       	movw	r24, r28
 a2e:	0e 94 37 05 	call	0xa6e	; 0xa6e <_Exit>

Disassembly of section .text._Exit:

00000a6e <_Exit>:
 a6e:	0e 94 55 00 	call	0xaa	; 0xaa <_exit>
