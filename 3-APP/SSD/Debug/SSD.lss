
SSD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000006c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000644  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  00000644  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000001c  00000000  00000000  00000673  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  0000068f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001465  00000000  00000000  0000071f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000701  00000000  00000000  00001b84  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005c4  00000000  00000000  00002285  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e0  00000000  00000000  0000284c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001fb  00000000  00000000  0000292c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000711  00000000  00000000  00002b27  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00003238  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  000005c2  000005c2  00000636  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00003298  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.DIO_voidSetPinDirection 000000e6  00000362  00000362  000003d6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.DIO_voidSetPinValue 000000e6  00000448  00000448  000004bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.main    0000000e  000005b4  000005b4  00000628  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.SSD_Init 00000052  0000052e  0000052e  000005a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.SSD_voidDisplayNumbers 000002f6  0000006c  0000006c  000000e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.libgcc.mul 0000001e  00000580  00000580  000005f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.__dummy_fini 00000002  000005ca  000005ca  0000063e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.__dummy_funcs_on_exit 00000002  000005cc  000005cc  00000640  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.__dummy_simulator_exit 00000002  000005ce  000005ce  00000642  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.exit    00000016  0000059e  0000059e  00000612  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text._Exit   00000004  000005c6  000005c6  0000063a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__bad_interrupt>
   8:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__bad_interrupt>
   c:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__bad_interrupt>
  10:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__bad_interrupt>
  14:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__bad_interrupt>
  18:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__bad_interrupt>
  1c:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__bad_interrupt>
  20:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__bad_interrupt>
  24:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__bad_interrupt>
  28:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__bad_interrupt>
  2c:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__bad_interrupt>
  30:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__bad_interrupt>
  34:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__bad_interrupt>
  38:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__bad_interrupt>
  3c:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__bad_interrupt>
  40:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__bad_interrupt>
  44:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__bad_interrupt>
  48:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__bad_interrupt>
  4c:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__bad_interrupt>
  50:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 da 02 	call	0x5b4	; 0x5b4 <main>
  64:	0c 94 cf 02 	jmp	0x59e	; 0x59e <exit>

00000068 <_exit>:
  68:	f8 94       	cli

0000006a <__stop_program>:
  6a:	ff cf       	rjmp	.-2      	; 0x6a <__stop_program>

Disassembly of section .text:

000005c2 <__bad_interrupt>:
 5c2:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.DIO_voidSetPinDirection:

00000362 <DIO_voidSetPinDirection>:
#include "DIO_register.h"
#include "DIO_private.h"

void DIO_voidSetPinDirection(u8 PORT_ID,u8 PIN_ID,u8 Direction)
{
	if(PIN_ID <= PIN7)
 362:	68 30       	cpi	r22, 0x08	; 8
 364:	08 f0       	brcs	.+2      	; 0x368 <DIO_voidSetPinDirection+0x6>
 366:	6f c0       	rjmp	.+222    	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
	{
		if(Direction == PIN_INPUT)
 368:	41 11       	cpse	r20, r1
 36a:	38 c0       	rjmp	.+112    	; 0x3dc <DIO_voidSetPinDirection+0x7a>
		{
			switch(PORT_ID)
 36c:	81 30       	cpi	r24, 0x01	; 1
 36e:	91 f0       	breq	.+36     	; 0x394 <DIO_voidSetPinDirection+0x32>
 370:	28 f0       	brcs	.+10     	; 0x37c <DIO_voidSetPinDirection+0x1a>
 372:	82 30       	cpi	r24, 0x02	; 2
 374:	d9 f0       	breq	.+54     	; 0x3ac <DIO_voidSetPinDirection+0x4a>
 376:	83 30       	cpi	r24, 0x03	; 3
 378:	29 f1       	breq	.+74     	; 0x3c4 <DIO_voidSetPinDirection+0x62>
 37a:	08 95       	ret
			{
				case DIO_PORTA: CLR_BIT(DDRA,PIN_ID);break;
 37c:	2a b3       	in	r18, 0x1a	; 26
 37e:	81 e0       	ldi	r24, 0x01	; 1
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	02 c0       	rjmp	.+4      	; 0x388 <DIO_voidSetPinDirection+0x26>
 384:	88 0f       	add	r24, r24
 386:	99 1f       	adc	r25, r25
 388:	6a 95       	dec	r22
 38a:	e2 f7       	brpl	.-8      	; 0x384 <DIO_voidSetPinDirection+0x22>
 38c:	80 95       	com	r24
 38e:	82 23       	and	r24, r18
 390:	8a bb       	out	0x1a, r24	; 26
 392:	08 95       	ret
				case DIO_PORTB: CLR_BIT(DDRB,PIN_ID);break;
 394:	27 b3       	in	r18, 0x17	; 23
 396:	81 e0       	ldi	r24, 0x01	; 1
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	02 c0       	rjmp	.+4      	; 0x3a0 <DIO_voidSetPinDirection+0x3e>
 39c:	88 0f       	add	r24, r24
 39e:	99 1f       	adc	r25, r25
 3a0:	6a 95       	dec	r22
 3a2:	e2 f7       	brpl	.-8      	; 0x39c <DIO_voidSetPinDirection+0x3a>
 3a4:	80 95       	com	r24
 3a6:	82 23       	and	r24, r18
 3a8:	87 bb       	out	0x17, r24	; 23
 3aa:	08 95       	ret
				case DIO_PORTC: CLR_BIT(DDRC,PIN_ID);break;
 3ac:	24 b3       	in	r18, 0x14	; 20
 3ae:	81 e0       	ldi	r24, 0x01	; 1
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	02 c0       	rjmp	.+4      	; 0x3b8 <DIO_voidSetPinDirection+0x56>
 3b4:	88 0f       	add	r24, r24
 3b6:	99 1f       	adc	r25, r25
 3b8:	6a 95       	dec	r22
 3ba:	e2 f7       	brpl	.-8      	; 0x3b4 <DIO_voidSetPinDirection+0x52>
 3bc:	80 95       	com	r24
 3be:	82 23       	and	r24, r18
 3c0:	84 bb       	out	0x14, r24	; 20
 3c2:	08 95       	ret
				case DIO_PORTD: CLR_BIT(DDRD,PIN_ID);break;
 3c4:	21 b3       	in	r18, 0x11	; 17
 3c6:	81 e0       	ldi	r24, 0x01	; 1
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	02 c0       	rjmp	.+4      	; 0x3d0 <DIO_voidSetPinDirection+0x6e>
 3cc:	88 0f       	add	r24, r24
 3ce:	99 1f       	adc	r25, r25
 3d0:	6a 95       	dec	r22
 3d2:	e2 f7       	brpl	.-8      	; 0x3cc <DIO_voidSetPinDirection+0x6a>
 3d4:	80 95       	com	r24
 3d6:	82 23       	and	r24, r18
 3d8:	81 bb       	out	0x11, r24	; 17
 3da:	08 95       	ret
			}
		}
		else if(Direction == PIN_OUTPUT)
 3dc:	41 30       	cpi	r20, 0x01	; 1
 3de:	99 f5       	brne	.+102    	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
		{
			switch(PORT_ID)
 3e0:	81 30       	cpi	r24, 0x01	; 1
 3e2:	89 f0       	breq	.+34     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3e4:	28 f0       	brcs	.+10     	; 0x3f0 <DIO_voidSetPinDirection+0x8e>
 3e6:	82 30       	cpi	r24, 0x02	; 2
 3e8:	c9 f0       	breq	.+50     	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 3ea:	83 30       	cpi	r24, 0x03	; 3
 3ec:	11 f1       	breq	.+68     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 3ee:	08 95       	ret
			{
				case DIO_PORTA: SET_BIT(DDRA,PIN_ID);break;
 3f0:	2a b3       	in	r18, 0x1a	; 26
 3f2:	81 e0       	ldi	r24, 0x01	; 1
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	02 c0       	rjmp	.+4      	; 0x3fc <DIO_voidSetPinDirection+0x9a>
 3f8:	88 0f       	add	r24, r24
 3fa:	99 1f       	adc	r25, r25
 3fc:	6a 95       	dec	r22
 3fe:	e2 f7       	brpl	.-8      	; 0x3f8 <DIO_voidSetPinDirection+0x96>
 400:	82 2b       	or	r24, r18
 402:	8a bb       	out	0x1a, r24	; 26
 404:	08 95       	ret
				case DIO_PORTB: SET_BIT(DDRB,PIN_ID);break;
 406:	27 b3       	in	r18, 0x17	; 23
 408:	81 e0       	ldi	r24, 0x01	; 1
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	02 c0       	rjmp	.+4      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 40e:	88 0f       	add	r24, r24
 410:	99 1f       	adc	r25, r25
 412:	6a 95       	dec	r22
 414:	e2 f7       	brpl	.-8      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 416:	82 2b       	or	r24, r18
 418:	87 bb       	out	0x17, r24	; 23
 41a:	08 95       	ret
				case DIO_PORTC: SET_BIT(DDRC,PIN_ID);break;
 41c:	24 b3       	in	r18, 0x14	; 20
 41e:	81 e0       	ldi	r24, 0x01	; 1
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	02 c0       	rjmp	.+4      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 424:	88 0f       	add	r24, r24
 426:	99 1f       	adc	r25, r25
 428:	6a 95       	dec	r22
 42a:	e2 f7       	brpl	.-8      	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 42c:	82 2b       	or	r24, r18
 42e:	84 bb       	out	0x14, r24	; 20
 430:	08 95       	ret
				case DIO_PORTD: SET_BIT(DDRD,PIN_ID);break;
 432:	21 b3       	in	r18, 0x11	; 17
 434:	81 e0       	ldi	r24, 0x01	; 1
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	02 c0       	rjmp	.+4      	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 43a:	88 0f       	add	r24, r24
 43c:	99 1f       	adc	r25, r25
 43e:	6a 95       	dec	r22
 440:	e2 f7       	brpl	.-8      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 442:	82 2b       	or	r24, r18
 444:	81 bb       	out	0x11, r24	; 17
 446:	08 95       	ret

Disassembly of section .text.DIO_voidSetPinValue:

00000448 <DIO_voidSetPinValue>:
		}
	}
}
void DIO_voidSetPinValue(u8 PORT_ID,u8 PIN_ID,u8 Value)
{
	if(PIN_ID <= PIN7)
 448:	68 30       	cpi	r22, 0x08	; 8
 44a:	08 f0       	brcs	.+2      	; 0x44e <DIO_voidSetPinValue+0x6>
 44c:	6f c0       	rjmp	.+222    	; 0x52c <DIO_voidSetPinValue+0xe4>
	{
		if(Value == PIN_LOW)
 44e:	41 11       	cpse	r20, r1
 450:	38 c0       	rjmp	.+112    	; 0x4c2 <DIO_voidSetPinValue+0x7a>
		{
			switch(PORT_ID)
 452:	81 30       	cpi	r24, 0x01	; 1
 454:	91 f0       	breq	.+36     	; 0x47a <DIO_voidSetPinValue+0x32>
 456:	28 f0       	brcs	.+10     	; 0x462 <DIO_voidSetPinValue+0x1a>
 458:	82 30       	cpi	r24, 0x02	; 2
 45a:	d9 f0       	breq	.+54     	; 0x492 <DIO_voidSetPinValue+0x4a>
 45c:	83 30       	cpi	r24, 0x03	; 3
 45e:	29 f1       	breq	.+74     	; 0x4aa <DIO_voidSetPinValue+0x62>
 460:	08 95       	ret
			{
				case DIO_PORTA: CLR_BIT(PORTA,PIN_ID);break;
 462:	2b b3       	in	r18, 0x1b	; 27
 464:	81 e0       	ldi	r24, 0x01	; 1
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	02 c0       	rjmp	.+4      	; 0x46e <DIO_voidSetPinValue+0x26>
 46a:	88 0f       	add	r24, r24
 46c:	99 1f       	adc	r25, r25
 46e:	6a 95       	dec	r22
 470:	e2 f7       	brpl	.-8      	; 0x46a <DIO_voidSetPinValue+0x22>
 472:	80 95       	com	r24
 474:	82 23       	and	r24, r18
 476:	8b bb       	out	0x1b, r24	; 27
 478:	08 95       	ret
				case DIO_PORTB: CLR_BIT(PORTB,PIN_ID);break;
 47a:	28 b3       	in	r18, 0x18	; 24
 47c:	81 e0       	ldi	r24, 0x01	; 1
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	02 c0       	rjmp	.+4      	; 0x486 <DIO_voidSetPinValue+0x3e>
 482:	88 0f       	add	r24, r24
 484:	99 1f       	adc	r25, r25
 486:	6a 95       	dec	r22
 488:	e2 f7       	brpl	.-8      	; 0x482 <DIO_voidSetPinValue+0x3a>
 48a:	80 95       	com	r24
 48c:	82 23       	and	r24, r18
 48e:	88 bb       	out	0x18, r24	; 24
 490:	08 95       	ret
				case DIO_PORTC: CLR_BIT(PORTC,PIN_ID);break;
 492:	25 b3       	in	r18, 0x15	; 21
 494:	81 e0       	ldi	r24, 0x01	; 1
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	02 c0       	rjmp	.+4      	; 0x49e <DIO_voidSetPinValue+0x56>
 49a:	88 0f       	add	r24, r24
 49c:	99 1f       	adc	r25, r25
 49e:	6a 95       	dec	r22
 4a0:	e2 f7       	brpl	.-8      	; 0x49a <DIO_voidSetPinValue+0x52>
 4a2:	80 95       	com	r24
 4a4:	82 23       	and	r24, r18
 4a6:	85 bb       	out	0x15, r24	; 21
 4a8:	08 95       	ret
				case DIO_PORTD: CLR_BIT(PORTD,PIN_ID);break;
 4aa:	22 b3       	in	r18, 0x12	; 18
 4ac:	81 e0       	ldi	r24, 0x01	; 1
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	02 c0       	rjmp	.+4      	; 0x4b6 <DIO_voidSetPinValue+0x6e>
 4b2:	88 0f       	add	r24, r24
 4b4:	99 1f       	adc	r25, r25
 4b6:	6a 95       	dec	r22
 4b8:	e2 f7       	brpl	.-8      	; 0x4b2 <DIO_voidSetPinValue+0x6a>
 4ba:	80 95       	com	r24
 4bc:	82 23       	and	r24, r18
 4be:	82 bb       	out	0x12, r24	; 18
 4c0:	08 95       	ret
			}
		}
		else if(Value == PIN_HIGH)
 4c2:	41 30       	cpi	r20, 0x01	; 1
 4c4:	99 f5       	brne	.+102    	; 0x52c <DIO_voidSetPinValue+0xe4>
		{
			switch(PORT_ID)
 4c6:	81 30       	cpi	r24, 0x01	; 1
 4c8:	89 f0       	breq	.+34     	; 0x4ec <DIO_voidSetPinValue+0xa4>
 4ca:	28 f0       	brcs	.+10     	; 0x4d6 <DIO_voidSetPinValue+0x8e>
 4cc:	82 30       	cpi	r24, 0x02	; 2
 4ce:	c9 f0       	breq	.+50     	; 0x502 <DIO_voidSetPinValue+0xba>
 4d0:	83 30       	cpi	r24, 0x03	; 3
 4d2:	11 f1       	breq	.+68     	; 0x518 <DIO_voidSetPinValue+0xd0>
 4d4:	08 95       	ret
			{
				case DIO_PORTA: SET_BIT(PORTA,PIN_ID);break;
 4d6:	2b b3       	in	r18, 0x1b	; 27
 4d8:	81 e0       	ldi	r24, 0x01	; 1
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	02 c0       	rjmp	.+4      	; 0x4e2 <DIO_voidSetPinValue+0x9a>
 4de:	88 0f       	add	r24, r24
 4e0:	99 1f       	adc	r25, r25
 4e2:	6a 95       	dec	r22
 4e4:	e2 f7       	brpl	.-8      	; 0x4de <DIO_voidSetPinValue+0x96>
 4e6:	82 2b       	or	r24, r18
 4e8:	8b bb       	out	0x1b, r24	; 27
 4ea:	08 95       	ret
				case DIO_PORTB: SET_BIT(PORTB,PIN_ID);break;
 4ec:	28 b3       	in	r18, 0x18	; 24
 4ee:	81 e0       	ldi	r24, 0x01	; 1
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	02 c0       	rjmp	.+4      	; 0x4f8 <DIO_voidSetPinValue+0xb0>
 4f4:	88 0f       	add	r24, r24
 4f6:	99 1f       	adc	r25, r25
 4f8:	6a 95       	dec	r22
 4fa:	e2 f7       	brpl	.-8      	; 0x4f4 <DIO_voidSetPinValue+0xac>
 4fc:	82 2b       	or	r24, r18
 4fe:	88 bb       	out	0x18, r24	; 24
 500:	08 95       	ret
				case DIO_PORTC: SET_BIT(PORTC,PIN_ID);break;
 502:	25 b3       	in	r18, 0x15	; 21
 504:	81 e0       	ldi	r24, 0x01	; 1
 506:	90 e0       	ldi	r25, 0x00	; 0
 508:	02 c0       	rjmp	.+4      	; 0x50e <DIO_voidSetPinValue+0xc6>
 50a:	88 0f       	add	r24, r24
 50c:	99 1f       	adc	r25, r25
 50e:	6a 95       	dec	r22
 510:	e2 f7       	brpl	.-8      	; 0x50a <DIO_voidSetPinValue+0xc2>
 512:	82 2b       	or	r24, r18
 514:	85 bb       	out	0x15, r24	; 21
 516:	08 95       	ret
				case DIO_PORTD: SET_BIT(PORTD,PIN_ID);break;
 518:	22 b3       	in	r18, 0x12	; 18
 51a:	81 e0       	ldi	r24, 0x01	; 1
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	02 c0       	rjmp	.+4      	; 0x524 <DIO_voidSetPinValue+0xdc>
 520:	88 0f       	add	r24, r24
 522:	99 1f       	adc	r25, r25
 524:	6a 95       	dec	r22
 526:	e2 f7       	brpl	.-8      	; 0x520 <DIO_voidSetPinValue+0xd8>
 528:	82 2b       	or	r24, r18
 52a:	82 bb       	out	0x12, r24	; 18
 52c:	08 95       	ret

Disassembly of section .text.main:

000005b4 <main>:
{	

	
    while(1)
    {
			SSD_Init();
 5b4:	0e 94 97 02 	call	0x52e	; 0x52e <SSD_Init>
		SSD_voidDisplayNumbers(145);
 5b8:	81 e9       	ldi	r24, 0x91	; 145
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	0e 94 36 00 	call	0x6c	; 0x6c <__data_load_end>
 5c0:	f9 cf       	rjmp	.-14     	; 0x5b4 <main>

Disassembly of section .text.SSD_Init:

0000052e <SSD_Init>:
#include "DIO_config.h"
#include<util/delay.h>

void SSD_Init()
{
	DIO_voidSetPinDirection(DIO_PORTA, PIN3,PIN_OUTPUT);
 52e:	41 e0       	ldi	r20, 0x01	; 1
 530:	63 e0       	ldi	r22, 0x03	; 3
 532:	80 e0       	ldi	r24, 0x00	; 0
 534:	0e 94 b1 01 	call	0x362	; 0x362 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(DIO_PORTA, PIN2,PIN_OUTPUT);
 538:	41 e0       	ldi	r20, 0x01	; 1
 53a:	62 e0       	ldi	r22, 0x02	; 2
 53c:	80 e0       	ldi	r24, 0x00	; 0
 53e:	0e 94 b1 01 	call	0x362	; 0x362 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(DIO_PORTB, PIN5,PIN_OUTPUT);
 542:	41 e0       	ldi	r20, 0x01	; 1
 544:	65 e0       	ldi	r22, 0x05	; 5
 546:	81 e0       	ldi	r24, 0x01	; 1
 548:	0e 94 b1 01 	call	0x362	; 0x362 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(DIO_PORTB, PIN6,PIN_OUTPUT);
 54c:	41 e0       	ldi	r20, 0x01	; 1
 54e:	66 e0       	ldi	r22, 0x06	; 6
 550:	81 e0       	ldi	r24, 0x01	; 1
 552:	0e 94 b1 01 	call	0x362	; 0x362 <DIO_voidSetPinDirection>
	
	DIO_voidSetPinDirection(DIO_PORTB, PIN0,PIN_OUTPUT);
 556:	41 e0       	ldi	r20, 0x01	; 1
 558:	60 e0       	ldi	r22, 0x00	; 0
 55a:	81 e0       	ldi	r24, 0x01	; 1
 55c:	0e 94 b1 01 	call	0x362	; 0x362 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(DIO_PORTB, PIN1,PIN_OUTPUT);
 560:	41 e0       	ldi	r20, 0x01	; 1
 562:	61 e0       	ldi	r22, 0x01	; 1
 564:	81 e0       	ldi	r24, 0x01	; 1
 566:	0e 94 b1 01 	call	0x362	; 0x362 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(DIO_PORTB, PIN2,PIN_OUTPUT);
 56a:	41 e0       	ldi	r20, 0x01	; 1
 56c:	62 e0       	ldi	r22, 0x02	; 2
 56e:	81 e0       	ldi	r24, 0x01	; 1
 570:	0e 94 b1 01 	call	0x362	; 0x362 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(DIO_PORTB, PIN4,PIN_OUTPUT);
 574:	41 e0       	ldi	r20, 0x01	; 1
 576:	64 e0       	ldi	r22, 0x04	; 4
 578:	81 e0       	ldi	r24, 0x01	; 1
 57a:	0e 94 b1 01 	call	0x362	; 0x362 <DIO_voidSetPinDirection>
 57e:	08 95       	ret

Disassembly of section .text.SSD_voidDisplayNumbers:

0000006c <SSD_voidDisplayNumbers>:
	}
	
}

void SSD_voidDisplayNumbers(u16 Number)
{
  6c:	0f 93       	push	r16
  6e:	1f 93       	push	r17
  70:	cf 93       	push	r28
  72:	df 93       	push	r29
  74:	8c 01       	movw	r16, r24
	u16 Temp= Number%10;
  76:	9c 01       	movw	r18, r24
  78:	ad ec       	ldi	r26, 0xCD	; 205
  7a:	bc ec       	ldi	r27, 0xCC	; 204
  7c:	0e 94 c0 02 	call	0x580	; 0x580 <__umulhisi3>
  80:	ec 01       	movw	r28, r24
  82:	d6 95       	lsr	r29
  84:	c7 95       	ror	r28
  86:	d6 95       	lsr	r29
  88:	c7 95       	ror	r28
  8a:	d6 95       	lsr	r29
  8c:	c7 95       	ror	r28
  8e:	ae 01       	movw	r20, r28
  90:	44 0f       	add	r20, r20
  92:	55 1f       	adc	r21, r21
  94:	cc 0f       	add	r28, r28
  96:	dd 1f       	adc	r29, r29
  98:	cc 0f       	add	r28, r28
  9a:	dd 1f       	adc	r29, r29
  9c:	cc 0f       	add	r28, r28
  9e:	dd 1f       	adc	r29, r29
  a0:	c4 0f       	add	r28, r20
  a2:	d5 1f       	adc	r29, r21
  a4:	c8 01       	movw	r24, r16
  a6:	8c 1b       	sub	r24, r28
  a8:	9d 0b       	sbc	r25, r29
  aa:	ec 01       	movw	r28, r24
	DIO_voidSetPinValue(DIO_PORTB,PIN0,GET_BIT(Temp,0));
  ac:	48 2f       	mov	r20, r24
  ae:	41 70       	andi	r20, 0x01	; 1
  b0:	60 e0       	ldi	r22, 0x00	; 0
  b2:	81 e0       	ldi	r24, 0x01	; 1
  b4:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTB,PIN1,GET_BIT(Temp,1));
  b8:	ae 01       	movw	r20, r28
  ba:	56 95       	lsr	r21
  bc:	47 95       	ror	r20
  be:	41 70       	andi	r20, 0x01	; 1
  c0:	61 e0       	ldi	r22, 0x01	; 1
  c2:	81 e0       	ldi	r24, 0x01	; 1
  c4:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTB,PIN2,GET_BIT(Temp,2));
  c8:	ae 01       	movw	r20, r28
  ca:	56 95       	lsr	r21
  cc:	47 95       	ror	r20
  ce:	56 95       	lsr	r21
  d0:	47 95       	ror	r20
  d2:	41 70       	andi	r20, 0x01	; 1
  d4:	62 e0       	ldi	r22, 0x02	; 2
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTB,PIN4,GET_BIT(Temp,3));
  dc:	d6 95       	lsr	r29
  de:	c7 95       	ror	r28
  e0:	d6 95       	lsr	r29
  e2:	c7 95       	ror	r28
  e4:	d6 95       	lsr	r29
  e6:	c7 95       	ror	r28
  e8:	4c 2f       	mov	r20, r28
  ea:	41 70       	andi	r20, 0x01	; 1
  ec:	64 e0       	ldi	r22, 0x04	; 4
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	
	DIO_voidSetPinValue(DIO_PORTA,PIN3,PIN_LOW);
  f4:	40 e0       	ldi	r20, 0x00	; 0
  f6:	63 e0       	ldi	r22, 0x03	; 3
  f8:	80 e0       	ldi	r24, 0x00	; 0
  fa:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTA,PIN2,PIN_HIGH);
  fe:	41 e0       	ldi	r20, 0x01	; 1
 100:	62 e0       	ldi	r22, 0x02	; 2
 102:	80 e0       	ldi	r24, 0x00	; 0
 104:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTB,PIN5,PIN_HIGH);
 108:	41 e0       	ldi	r20, 0x01	; 1
 10a:	65 e0       	ldi	r22, 0x05	; 5
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTB,PIN6,PIN_HIGH);
 112:	41 e0       	ldi	r20, 0x01	; 1
 114:	66 e0       	ldi	r22, 0x06	; 6
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 11c:	81 ee       	ldi	r24, 0xE1	; 225
 11e:	94 e0       	ldi	r25, 0x04	; 4
 120:	01 97       	sbiw	r24, 0x01	; 1
 122:	f1 f7       	brne	.-4      	; 0x120 <SSD_voidDisplayNumbers+0xb4>
 124:	00 c0       	rjmp	.+0      	; 0x126 <SSD_voidDisplayNumbers+0xba>
 126:	00 00       	nop
	_delay_ms(5);
	
	Number/=10;
 128:	98 01       	movw	r18, r16
 12a:	ad ec       	ldi	r26, 0xCD	; 205
 12c:	bc ec       	ldi	r27, 0xCC	; 204
 12e:	0e 94 c0 02 	call	0x580	; 0x580 <__umulhisi3>
 132:	fc 01       	movw	r30, r24
 134:	f6 95       	lsr	r31
 136:	e7 95       	ror	r30
 138:	f6 95       	lsr	r31
 13a:	e7 95       	ror	r30
 13c:	f6 95       	lsr	r31
 13e:	e7 95       	ror	r30
	Temp= Number%10;
 140:	9f 01       	movw	r18, r30
 142:	0e 94 c0 02 	call	0x580	; 0x580 <__umulhisi3>
 146:	ec 01       	movw	r28, r24
 148:	d6 95       	lsr	r29
 14a:	c7 95       	ror	r28
 14c:	d6 95       	lsr	r29
 14e:	c7 95       	ror	r28
 150:	d6 95       	lsr	r29
 152:	c7 95       	ror	r28
 154:	ae 01       	movw	r20, r28
 156:	44 0f       	add	r20, r20
 158:	55 1f       	adc	r21, r21
 15a:	cc 0f       	add	r28, r28
 15c:	dd 1f       	adc	r29, r29
 15e:	cc 0f       	add	r28, r28
 160:	dd 1f       	adc	r29, r29
 162:	cc 0f       	add	r28, r28
 164:	dd 1f       	adc	r29, r29
 166:	c4 0f       	add	r28, r20
 168:	d5 1f       	adc	r29, r21
 16a:	cf 01       	movw	r24, r30
 16c:	8c 1b       	sub	r24, r28
 16e:	9d 0b       	sbc	r25, r29
 170:	ec 01       	movw	r28, r24
	DIO_voidSetPinValue(DIO_PORTB,PIN0,GET_BIT(Temp,0));
 172:	48 2f       	mov	r20, r24
 174:	41 70       	andi	r20, 0x01	; 1
 176:	60 e0       	ldi	r22, 0x00	; 0
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTB,PIN1,GET_BIT(Temp,1));
 17e:	ae 01       	movw	r20, r28
 180:	56 95       	lsr	r21
 182:	47 95       	ror	r20
 184:	41 70       	andi	r20, 0x01	; 1
 186:	61 e0       	ldi	r22, 0x01	; 1
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTB,PIN2,GET_BIT(Temp,2));
 18e:	ae 01       	movw	r20, r28
 190:	56 95       	lsr	r21
 192:	47 95       	ror	r20
 194:	56 95       	lsr	r21
 196:	47 95       	ror	r20
 198:	41 70       	andi	r20, 0x01	; 1
 19a:	62 e0       	ldi	r22, 0x02	; 2
 19c:	81 e0       	ldi	r24, 0x01	; 1
 19e:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTB,PIN4,GET_BIT(Temp,3));
 1a2:	d6 95       	lsr	r29
 1a4:	c7 95       	ror	r28
 1a6:	d6 95       	lsr	r29
 1a8:	c7 95       	ror	r28
 1aa:	d6 95       	lsr	r29
 1ac:	c7 95       	ror	r28
 1ae:	4c 2f       	mov	r20, r28
 1b0:	41 70       	andi	r20, 0x01	; 1
 1b2:	64 e0       	ldi	r22, 0x04	; 4
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	
	DIO_voidSetPinValue(DIO_PORTA,PIN3,PIN_HIGH);
 1ba:	41 e0       	ldi	r20, 0x01	; 1
 1bc:	63 e0       	ldi	r22, 0x03	; 3
 1be:	80 e0       	ldi	r24, 0x00	; 0
 1c0:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTA,PIN2,PIN_LOW);
 1c4:	40 e0       	ldi	r20, 0x00	; 0
 1c6:	62 e0       	ldi	r22, 0x02	; 2
 1c8:	80 e0       	ldi	r24, 0x00	; 0
 1ca:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTB,PIN5,PIN_HIGH);
 1ce:	41 e0       	ldi	r20, 0x01	; 1
 1d0:	65 e0       	ldi	r22, 0x05	; 5
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTB,PIN6,PIN_HIGH);
 1d8:	41 e0       	ldi	r20, 0x01	; 1
 1da:	66 e0       	ldi	r22, 0x06	; 6
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
 1e2:	81 ee       	ldi	r24, 0xE1	; 225
 1e4:	94 e0       	ldi	r25, 0x04	; 4
 1e6:	01 97       	sbiw	r24, 0x01	; 1
 1e8:	f1 f7       	brne	.-4      	; 0x1e6 <SSD_voidDisplayNumbers+0x17a>
 1ea:	00 c0       	rjmp	.+0      	; 0x1ec <SSD_voidDisplayNumbers+0x180>
 1ec:	00 00       	nop
	_delay_ms(5);
	
	Number/=10;
 1ee:	98 01       	movw	r18, r16
 1f0:	36 95       	lsr	r19
 1f2:	27 95       	ror	r18
 1f4:	36 95       	lsr	r19
 1f6:	27 95       	ror	r18
 1f8:	ab e7       	ldi	r26, 0x7B	; 123
 1fa:	b4 e1       	ldi	r27, 0x14	; 20
 1fc:	0e 94 c0 02 	call	0x580	; 0x580 <__umulhisi3>
 200:	fc 01       	movw	r30, r24
 202:	f6 95       	lsr	r31
 204:	e7 95       	ror	r30
	Temp= Number%10;
 206:	9f 01       	movw	r18, r30
 208:	ad ec       	ldi	r26, 0xCD	; 205
 20a:	bc ec       	ldi	r27, 0xCC	; 204
 20c:	0e 94 c0 02 	call	0x580	; 0x580 <__umulhisi3>
 210:	ec 01       	movw	r28, r24
 212:	d6 95       	lsr	r29
 214:	c7 95       	ror	r28
 216:	d6 95       	lsr	r29
 218:	c7 95       	ror	r28
 21a:	d6 95       	lsr	r29
 21c:	c7 95       	ror	r28
 21e:	ae 01       	movw	r20, r28
 220:	44 0f       	add	r20, r20
 222:	55 1f       	adc	r21, r21
 224:	cc 0f       	add	r28, r28
 226:	dd 1f       	adc	r29, r29
 228:	cc 0f       	add	r28, r28
 22a:	dd 1f       	adc	r29, r29
 22c:	cc 0f       	add	r28, r28
 22e:	dd 1f       	adc	r29, r29
 230:	c4 0f       	add	r28, r20
 232:	d5 1f       	adc	r29, r21
 234:	cf 01       	movw	r24, r30
 236:	8c 1b       	sub	r24, r28
 238:	9d 0b       	sbc	r25, r29
 23a:	ec 01       	movw	r28, r24
	DIO_voidSetPinValue(DIO_PORTB,PIN0,GET_BIT(Temp,0));
 23c:	48 2f       	mov	r20, r24
 23e:	41 70       	andi	r20, 0x01	; 1
 240:	60 e0       	ldi	r22, 0x00	; 0
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTB,PIN1,GET_BIT(Temp,1));
 248:	ae 01       	movw	r20, r28
 24a:	56 95       	lsr	r21
 24c:	47 95       	ror	r20
 24e:	41 70       	andi	r20, 0x01	; 1
 250:	61 e0       	ldi	r22, 0x01	; 1
 252:	81 e0       	ldi	r24, 0x01	; 1
 254:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTB,PIN2,GET_BIT(Temp,2));
 258:	ae 01       	movw	r20, r28
 25a:	56 95       	lsr	r21
 25c:	47 95       	ror	r20
 25e:	56 95       	lsr	r21
 260:	47 95       	ror	r20
 262:	41 70       	andi	r20, 0x01	; 1
 264:	62 e0       	ldi	r22, 0x02	; 2
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTB,PIN4,GET_BIT(Temp,3));
 26c:	d6 95       	lsr	r29
 26e:	c7 95       	ror	r28
 270:	d6 95       	lsr	r29
 272:	c7 95       	ror	r28
 274:	d6 95       	lsr	r29
 276:	c7 95       	ror	r28
 278:	4c 2f       	mov	r20, r28
 27a:	41 70       	andi	r20, 0x01	; 1
 27c:	64 e0       	ldi	r22, 0x04	; 4
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	
	DIO_voidSetPinValue(DIO_PORTA,PIN3,PIN_HIGH);
 284:	41 e0       	ldi	r20, 0x01	; 1
 286:	63 e0       	ldi	r22, 0x03	; 3
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTA,PIN2,PIN_HIGH);
 28e:	41 e0       	ldi	r20, 0x01	; 1
 290:	62 e0       	ldi	r22, 0x02	; 2
 292:	80 e0       	ldi	r24, 0x00	; 0
 294:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTB,PIN5,PIN_LOW);
 298:	40 e0       	ldi	r20, 0x00	; 0
 29a:	65 e0       	ldi	r22, 0x05	; 5
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTB,PIN6,PIN_HIGH);
 2a2:	41 e0       	ldi	r20, 0x01	; 1
 2a4:	66 e0       	ldi	r22, 0x06	; 6
 2a6:	81 e0       	ldi	r24, 0x01	; 1
 2a8:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
 2ac:	81 ee       	ldi	r24, 0xE1	; 225
 2ae:	94 e0       	ldi	r25, 0x04	; 4
 2b0:	01 97       	sbiw	r24, 0x01	; 1
 2b2:	f1 f7       	brne	.-4      	; 0x2b0 <SSD_voidDisplayNumbers+0x244>
 2b4:	00 c0       	rjmp	.+0      	; 0x2b6 <SSD_voidDisplayNumbers+0x24a>
 2b6:	00 00       	nop
	_delay_ms(5);
	
	Number/=10;
 2b8:	98 01       	movw	r18, r16
 2ba:	36 95       	lsr	r19
 2bc:	27 95       	ror	r18
 2be:	36 95       	lsr	r19
 2c0:	27 95       	ror	r18
 2c2:	36 95       	lsr	r19
 2c4:	27 95       	ror	r18
 2c6:	a5 ec       	ldi	r26, 0xC5	; 197
 2c8:	b0 e2       	ldi	r27, 0x20	; 32
 2ca:	0e 94 c0 02 	call	0x580	; 0x580 <__umulhisi3>
 2ce:	8c 01       	movw	r16, r24
 2d0:	ec 01       	movw	r28, r24
 2d2:	d2 95       	swap	r29
 2d4:	c2 95       	swap	r28
 2d6:	cf 70       	andi	r28, 0x0F	; 15
 2d8:	cd 27       	eor	r28, r29
 2da:	df 70       	andi	r29, 0x0F	; 15
 2dc:	cd 27       	eor	r28, r29
	Temp= Number%10;
	DIO_voidSetPinValue(DIO_PORTB,PIN0,GET_BIT(Number,0));
 2de:	4c 2f       	mov	r20, r28
 2e0:	41 70       	andi	r20, 0x01	; 1
 2e2:	60 e0       	ldi	r22, 0x00	; 0
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTB,PIN1,GET_BIT(Number,1));
 2ea:	ae 01       	movw	r20, r28
 2ec:	56 95       	lsr	r21
 2ee:	47 95       	ror	r20
 2f0:	41 70       	andi	r20, 0x01	; 1
 2f2:	61 e0       	ldi	r22, 0x01	; 1
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTB,PIN2,GET_BIT(Number,2));
 2fa:	d6 95       	lsr	r29
 2fc:	c7 95       	ror	r28
 2fe:	d6 95       	lsr	r29
 300:	c7 95       	ror	r28
 302:	4c 2f       	mov	r20, r28
 304:	41 70       	andi	r20, 0x01	; 1
 306:	62 e0       	ldi	r22, 0x02	; 2
 308:	81 e0       	ldi	r24, 0x01	; 1
 30a:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTB,PIN4,GET_BIT(Number,3));
 30e:	a8 01       	movw	r20, r16
 310:	44 0f       	add	r20, r20
 312:	45 2f       	mov	r20, r21
 314:	44 1f       	adc	r20, r20
 316:	55 0b       	sbc	r21, r21
 318:	51 95       	neg	r21
 31a:	41 70       	andi	r20, 0x01	; 1
 31c:	64 e0       	ldi	r22, 0x04	; 4
 31e:	81 e0       	ldi	r24, 0x01	; 1
 320:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	
	DIO_voidSetPinValue(DIO_PORTA,PIN3,PIN_HIGH);
 324:	41 e0       	ldi	r20, 0x01	; 1
 326:	63 e0       	ldi	r22, 0x03	; 3
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTA,PIN2,PIN_HIGH);
 32e:	41 e0       	ldi	r20, 0x01	; 1
 330:	62 e0       	ldi	r22, 0x02	; 2
 332:	80 e0       	ldi	r24, 0x00	; 0
 334:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTB,PIN5,PIN_HIGH);
 338:	41 e0       	ldi	r20, 0x01	; 1
 33a:	65 e0       	ldi	r22, 0x05	; 5
 33c:	81 e0       	ldi	r24, 0x01	; 1
 33e:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
	DIO_voidSetPinValue(DIO_PORTB,PIN6,PIN_LOW);
 342:	40 e0       	ldi	r20, 0x00	; 0
 344:	66 e0       	ldi	r22, 0x06	; 6
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	0e 94 24 02 	call	0x448	; 0x448 <DIO_voidSetPinValue>
 34c:	81 ee       	ldi	r24, 0xE1	; 225
 34e:	94 e0       	ldi	r25, 0x04	; 4
 350:	01 97       	sbiw	r24, 0x01	; 1
 352:	f1 f7       	brne	.-4      	; 0x350 <SSD_voidDisplayNumbers+0x2e4>
 354:	00 c0       	rjmp	.+0      	; 0x356 <SSD_voidDisplayNumbers+0x2ea>
 356:	00 00       	nop
	_delay_ms(5);
 358:	df 91       	pop	r29
 35a:	cf 91       	pop	r28
 35c:	1f 91       	pop	r17
 35e:	0f 91       	pop	r16
 360:	08 95       	ret

Disassembly of section .text.libgcc.mul:

00000580 <__umulhisi3>:
 580:	a2 9f       	mul	r26, r18
 582:	b0 01       	movw	r22, r0
 584:	b3 9f       	mul	r27, r19
 586:	c0 01       	movw	r24, r0
 588:	a3 9f       	mul	r26, r19
 58a:	70 0d       	add	r23, r0
 58c:	81 1d       	adc	r24, r1
 58e:	11 24       	eor	r1, r1
 590:	91 1d       	adc	r25, r1
 592:	b2 9f       	mul	r27, r18
 594:	70 0d       	add	r23, r0
 596:	81 1d       	adc	r24, r1
 598:	11 24       	eor	r1, r1
 59a:	91 1d       	adc	r25, r1
 59c:	08 95       	ret

Disassembly of section .text.__dummy_fini:

000005ca <_fini>:
 5ca:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000005cc <__funcs_on_exit>:
 5cc:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000005ce <__simulator_exit>:
 5ce:	08 95       	ret

Disassembly of section .text.exit:

0000059e <exit>:
 59e:	ec 01       	movw	r28, r24
 5a0:	0e 94 e6 02 	call	0x5cc	; 0x5cc <__funcs_on_exit>
 5a4:	0e 94 e5 02 	call	0x5ca	; 0x5ca <_fini>
 5a8:	ce 01       	movw	r24, r28
 5aa:	0e 94 e7 02 	call	0x5ce	; 0x5ce <__simulator_exit>
 5ae:	ce 01       	movw	r24, r28
 5b0:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <_Exit>

Disassembly of section .text._Exit:

000005c6 <_Exit>:
 5c6:	0e 94 34 00 	call	0x68	; 0x68 <_exit>
